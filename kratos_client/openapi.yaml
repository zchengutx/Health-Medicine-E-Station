# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1/DoctorsList:
        post:
            tags:
                - Doctors
            description: Sends a greeting
            operationId: Doctors_DoctorsList
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/doctors.v1.DoctorsListRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/doctors.v1.DoctorsListReply'
    /v1/SearchForCities:
        post:
            tags:
                - User
            operationId: User_SearchForCities
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.SearchForCitiesRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.SearchForCitiesReply'
    /v1/SelectTheCity:
        post:
            tags:
                - User
            operationId: User_SelectTheCity
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.SelectTheCityRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.SelectTheCityReply'
    /v1/cart/create:
        post:
            tags:
                - Cart
            operationId: Cart_CreateCart
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.cart.v1.CreateCartRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.cart.v1.CreateCartReply'
    /v1/cart/delete:
        post:
            tags:
                - Cart
            operationId: Cart_DeleteCart
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.cart.v1.DeleteCartRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.cart.v1.DeleteCartReply'
    /v1/cart/list:
        post:
            tags:
                - Cart
            operationId: Cart_ListCart
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.cart.v1.ListCartRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.cart.v1.ListCartReply'
    /v1/cart/update:
        post:
            tags:
                - Cart
            operationId: Cart_UpdateCart
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/api.cart.v1.UpdateCartRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/api.cart.v1.UpdateCartReply'
    /v1/chat/history:
        get:
            tags:
                - Chat
            description: 获取聊天历史记录
            operationId: Chat_GetChatHistory
            parameters:
                - name: userId
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: targetId
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: pageSize
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/.GetChatHistoryReply'
    /v1/chat/message:
        post:
            tags:
                - Chat
            description: 保存聊天消息
            operationId: Chat_SaveChatMessage
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/.SaveChatMessageRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/.SaveChatMessageReply'
    /v1/chat/rooms:
        get:
            tags:
                - Chat
            description: 获取用户的聊天房间列表
            operationId: Chat_GetUserChatRooms
            parameters:
                - name: userId
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/.GetUserChatRoomsReply'
    /v1/create/estimate:
        post:
            tags:
                - Estimate
            operationId: Estimate_CreateEstimate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/.CreateEstimateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/.CreateEstimateReply'
    /v1/createAddress:
        post:
            tags:
                - User
            operationId: User_CreateAddress
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.CreateAddressRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.CreateAddressReply'
    /v1/delete/estimate:
        post:
            tags:
                - Estimate
            operationId: Estimate_DeleteEstimate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/.DeleteEstimateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/.DeleteEstimateReply'
    /v1/drug:
        post:
            tags:
                - Drug
            operationId: Drug_GetDrug
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/drug.v1.GetDrugRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/drug.v1.GetDrugReply'
    /v1/drug/explain:
        post:
            tags:
                - Drug
            operationId: Drug_GetExplain
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/drug.v1.GetExplainRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/drug.v1.GetExplainReply'
    /v1/drug/guide:
        post:
            tags:
                - Drug
            operationId: Drug_GetGuide
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/drug.v1.GetGuideRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/drug.v1.GetGuideReply'
    /v1/drug/list:
        post:
            tags:
                - Drug
            operationId: Drug_ListDrug
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/drug.v1.ListDrugRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/drug.v1.ListDrugReply'
    /v1/get/estimate:
        post:
            tags:
                - Estimate
            operationId: Estimate_GetEstimate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/.GetEstimateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/.GetEstimateReply'
    /v1/list/estimate:
        post:
            tags:
                - Estimate
            operationId: Estimate_ListDrugEstimate
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/.ListDrugEstimateRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/.ListDrugEstimateReply'
    /v1/login:
        post:
            tags:
                - User
            operationId: User_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.LoginReply'
    /v1/sendSms:
        post:
            tags:
                - User
            description: Sends a greeting
            operationId: User_SendSms
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.SendSmsRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.SendSmsReply'
    /v1/updateMobile:
        post:
            tags:
                - User
            operationId: User_UpdateMobile
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.UpdateMobileRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.UpdateMobileReply'
    /v1/updateNickName:
        post:
            tags:
                - User
            operationId: User_UpdateNickName
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.UpdateNickNameRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.UpdateNickNameReply'
    /v1/userInfo:
        post:
            tags:
                - User
            operationId: User_UserInfo
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/user.v1.UserInfoRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/user.v1.UserInfoReply'
components:
    schemas:
        .ChatMessageInfo:
            type: object
            properties:
                id:
                    type: string
                fromId:
                    type: integer
                    format: int32
                toId:
                    type: integer
                    format: int32
                fromName:
                    type: string
                toName:
                    type: string
                content:
                    type: string
                messageType:
                    type: string
                roomId:
                    type: string
                createdAt:
                    type: string
        .ChatRoomInfo:
            type: object
            properties:
                roomId:
                    type: string
                targetId:
                    type: integer
                    format: int32
                targetName:
                    type: string
                targetRole:
                    type: string
                lastMessage:
                    type: string
                lastMessageTime:
                    type: string
                unreadCount:
                    type: integer
                    format: int32
        .CreateEstimateReply:
            type: object
            properties:
                code:
                    type: string
                message:
                    type: string
        .CreateEstimateRequest:
            type: object
            properties:
                drugId:
                    type: string
                userId:
                    type: string
                content:
                    type: string
                image:
                    type: string
        .DeleteEstimateReply:
            type: object
            properties:
                code:
                    type: string
                message:
                    type: string
        .DeleteEstimateRequest:
            type: object
            properties:
                id:
                    type: string
        .EstimateInfo:
            type: object
            properties:
                drugId:
                    type: string
                content:
                    type: string
                image:
                    type: string
                mobile:
                    type: string
                createTime:
                    type: string
                avatar:
                    type: string
        .GetChatHistoryReply:
            type: object
            properties:
                code:
                    type: string
                message:
                    type: string
                messages:
                    type: array
                    items:
                        $ref: '#/components/schemas/.ChatMessageInfo'
                total:
                    type: integer
                    format: int32
        .GetEstimateReply:
            type: object
            properties:
                code:
                    type: string
                message:
                    type: string
                info:
                    $ref: '#/components/schemas/.EstimateInfo'
        .GetEstimateRequest:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
        .GetUserChatRoomsReply:
            type: object
            properties:
                code:
                    type: string
                message:
                    type: string
                rooms:
                    type: array
                    items:
                        $ref: '#/components/schemas/.ChatRoomInfo'
        .InfoDrugs:
            type: object
            properties:
                drugName:
                    type: string
                specification:
                    type: string
                price:
                    type: number
                    format: double
                salesVolume:
                    type: number
                    format: double
                inventory:
                    type: string
                exhibitionUrl:
                    type: string
        .ListDrugEstimateReply:
            type: object
            properties:
                code:
                    type: string
                message:
                    type: string
                info:
                    $ref: '#/components/schemas/.InfoDrugs'
                list:
                    type: array
                    items:
                        $ref: '#/components/schemas/.EstimateInfo'
        .ListDrugEstimateRequest:
            type: object
            properties:
                drugId:
                    type: string
                userId:
                    type: string
        .SaveChatMessageReply:
            type: object
            properties:
                code:
                    type: string
                message:
                    type: string
        .SaveChatMessageRequest:
            type: object
            properties:
                fromId:
                    type: integer
                    format: int32
                toId:
                    type: integer
                    format: int32
                content:
                    type: string
                messageType:
                    type: string
                roomId:
                    type: string
        api.cart.v1.CreateCartReply:
            type: object
            properties:
                code:
                    type: string
                msg:
                    type: string
        api.cart.v1.CreateCartRequest:
            type: object
            properties:
                userId:
                    type: string
                drugId:
                    type: string
                number:
                    type: string
        api.cart.v1.DeleteCartReply:
            type: object
            properties:
                code:
                    type: string
                msg:
                    type: string
        api.cart.v1.DeleteCartRequest:
            type: object
            properties:
                id:
                    type: string
        api.cart.v1.InfoCart:
            type: object
            properties:
                id:
                    type: string
                userId:
                    type: string
                drugId:
                    type: string
                number:
                    type: string
        api.cart.v1.ListCartReply:
            type: object
            properties:
                code:
                    type: string
                msg:
                    type: string
                cart:
                    type: array
                    items:
                        $ref: '#/components/schemas/api.cart.v1.InfoCart'
        api.cart.v1.ListCartRequest:
            type: object
            properties:
                userId:
                    type: string
        api.cart.v1.UpdateCartReply:
            type: object
            properties:
                code:
                    type: string
                msg:
                    type: string
        api.cart.v1.UpdateCartRequest:
            type: object
            properties:
                id:
                    type: string
                number:
                    type: string
        doctors.v1.DoctorsList:
            type: object
            properties:
                doctorCode:
                    type: string
                doctorsName:
                    type: string
        doctors.v1.DoctorsListReply:
            type: object
            properties:
                message:
                    type: string
                doctorsList:
                    type: array
                    items:
                        $ref: '#/components/schemas/doctors.v1.DoctorsList'
            description: The response message containing the greetings
        doctors.v1.DoctorsListRequest:
            type: object
            properties: {}
            description: The request message containing the user's name.
        drug.v1.ExplainInfo:
            type: object
            properties:
                commonName:
                    type: string
                goodsName:
                    type: string
                component:
                    type: string
                taboos:
                    type: string
                function:
                    type: string
                usageAndDosage:
                    type: string
                character:
                    type: string
                packagingSpecification:
                    type: string
                badnessReaction:
                    type: string
                condition:
                    type: string
                validTime:
                    type: string
                notice:
                    type: string
                interaction:
                    type: string
                ratifyNumber:
                    type: string
                manufacturer:
                    type: string
                standardNumber:
                    type: string
                possessor:
                    type: string
                address:
                    type: string
                specification:
                    type: string
                dosageForm:
                    type: string
        drug.v1.GetDrugReply:
            type: object
            properties:
                code:
                    type: string
                msg:
                    type: string
                drug:
                    $ref: '#/components/schemas/drug.v1.InfoDrug'
        drug.v1.GetDrugRequest:
            type: object
            properties:
                id:
                    type: string
        drug.v1.GetExplainReply:
            type: object
            properties:
                code:
                    type: string
                msg:
                    type: string
                explain:
                    $ref: '#/components/schemas/drug.v1.ExplainInfo'
        drug.v1.GetExplainRequest:
            type: object
            properties:
                id:
                    type: string
        drug.v1.GetGuideReply:
            type: object
            properties:
                code:
                    type: string
                msg:
                    type: string
                guide:
                    $ref: '#/components/schemas/drug.v1.GuideInfo'
        drug.v1.GetGuideRequest:
            type: object
            properties:
                id:
                    type: string
        drug.v1.GuideInfo:
            type: object
            properties:
                majorFunction:
                    type: string
                usageAndDosage:
                    type: string
                taboos:
                    type: string
                specialCrowd:
                    type: string
                condition:
                    type: string
        drug.v1.InfoDrug:
            type: object
            properties:
                drugName:
                    type: string
                specification:
                    type: string
                price:
                    type: number
                    format: double
                salesVolume:
                    type: number
                    format: double
                inventory:
                    type: string
                exhibitionUrl:
                    type: string
                guide:
                    $ref: '#/components/schemas/drug.v1.GuideInfo'
        drug.v1.InfoDrugs:
            type: object
            properties:
                drugName:
                    type: string
                specification:
                    type: string
                price:
                    type: number
                    format: double
                salesVolume:
                    type: number
                    format: double
                inventory:
                    type: string
                exhibitionUrl:
                    type: string
        drug.v1.ListDrugReply:
            type: object
            properties:
                code:
                    type: string
                msg:
                    type: string
                drug:
                    type: array
                    items:
                        $ref: '#/components/schemas/drug.v1.InfoDrugs'
        drug.v1.ListDrugRequest:
            type: object
            properties:
                fristCategoryId:
                    type: string
                secondCategoryId:
                    type: string
                keyword:
                    type: string
        user.v1.CityList:
            type: object
            properties:
                cityName:
                    type: string
                cityId:
                    type: integer
                    format: int32
        user.v1.CreateAddressReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        user.v1.CreateAddressRequest:
            type: object
            properties:
                userName:
                    type: string
                mobile:
                    type: string
                cityId:
                    type: integer
                    format: int32
                shippingAddress:
                    type: string
                doorplateFloor:
                    type: string
                label:
                    type: string
            description: The request message containing the user's name.
        user.v1.LoginReply:
            type: object
            properties:
                message:
                    type: string
                token:
                    type: string
            description: The response message containing the greetings
        user.v1.LoginRequest:
            type: object
            properties:
                mobile:
                    type: string
                sendSmsCode:
                    type: string
            description: The request message containing the user's name.
        user.v1.SearchForCitiesReply:
            type: object
            properties:
                message:
                    type: string
                cityList:
                    type: array
                    items:
                        $ref: '#/components/schemas/user.v1.CityList'
        user.v1.SearchForCitiesRequest:
            type: object
            properties:
                addressName:
                    type: string
            description: The response message containing the greetings
        user.v1.SelectTheCityReply:
            type: object
            properties:
                message:
                    type: string
                cityList:
                    type: array
                    items:
                        $ref: '#/components/schemas/user.v1.CityList'
            description: The response message containing the greetings
        user.v1.SelectTheCityRequest:
            type: object
            properties: {}
            description: The request message containing the user's name.
        user.v1.SendSmsReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        user.v1.SendSmsRequest:
            type: object
            properties:
                mobile:
                    type: string
                source:
                    type: string
            description: The request message containing the user's name.
        user.v1.UpdateMobileReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        user.v1.UpdateMobileRequest:
            type: object
            properties:
                mobile:
                    type: string
                sendSmsCode:
                    type: string
                newMobile:
                    type: string
            description: The request message containing the user's name.
        user.v1.UpdateNickNameReply:
            type: object
            properties:
                message:
                    type: string
            description: The response message containing the greetings
        user.v1.UpdateNickNameRequest:
            type: object
            properties:
                nickName:
                    type: string
            description: The request message containing the user's name.
        user.v1.UserInfoReply:
            type: object
            properties:
                message:
                    type: string
                userName:
                    type: string
                mobile:
                    type: string
                avatar:
                    type: string
            description: The response message containing the greetings
        user.v1.UserInfoRequest:
            type: object
            properties:
                id:
                    type: integer
                    format: int32
            description: The request message containing the user's name.
tags:
    - name: Cart
    - name: Chat
    - name: Doctors
      description: The greeting service definition.
    - name: Drug
    - name: Estimate
    - name: User
      description: The greeting service definition.
