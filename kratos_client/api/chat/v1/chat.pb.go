// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: chat/v1/chat.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetChatHistoryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TargetId      int32                  `protobuf:"varint,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatHistoryRequest) Reset() {
	*x = GetChatHistoryRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatHistoryRequest) ProtoMessage() {}

func (x *GetChatHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatHistoryRequest.ProtoReflect.Descriptor instead.
func (*GetChatHistoryRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{0}
}

func (x *GetChatHistoryRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetChatHistoryRequest) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *GetChatHistoryRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetChatHistoryRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetChatHistoryReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Messages      []*ChatMessageInfo     `protobuf:"bytes,3,rep,name=messages,proto3" json:"messages,omitempty"`
	Total         int32                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChatHistoryReply) Reset() {
	*x = GetChatHistoryReply{}
	mi := &file_chat_v1_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChatHistoryReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatHistoryReply) ProtoMessage() {}

func (x *GetChatHistoryReply) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatHistoryReply.ProtoReflect.Descriptor instead.
func (*GetChatHistoryReply) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{1}
}

func (x *GetChatHistoryReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetChatHistoryReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetChatHistoryReply) GetMessages() []*ChatMessageInfo {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *GetChatHistoryReply) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type SaveChatMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FromId        int32                  `protobuf:"varint,1,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToId          int32                  `protobuf:"varint,2,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	MessageType   string                 `protobuf:"bytes,4,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	RoomId        string                 `protobuf:"bytes,5,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveChatMessageRequest) Reset() {
	*x = SaveChatMessageRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveChatMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveChatMessageRequest) ProtoMessage() {}

func (x *SaveChatMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveChatMessageRequest.ProtoReflect.Descriptor instead.
func (*SaveChatMessageRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{2}
}

func (x *SaveChatMessageRequest) GetFromId() int32 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *SaveChatMessageRequest) GetToId() int32 {
	if x != nil {
		return x.ToId
	}
	return 0
}

func (x *SaveChatMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SaveChatMessageRequest) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *SaveChatMessageRequest) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

type SaveChatMessageReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveChatMessageReply) Reset() {
	*x = SaveChatMessageReply{}
	mi := &file_chat_v1_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveChatMessageReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveChatMessageReply) ProtoMessage() {}

func (x *SaveChatMessageReply) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveChatMessageReply.ProtoReflect.Descriptor instead.
func (*SaveChatMessageReply) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{3}
}

func (x *SaveChatMessageReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SaveChatMessageReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetUserChatRoomsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int32                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserChatRoomsRequest) Reset() {
	*x = GetUserChatRoomsRequest{}
	mi := &file_chat_v1_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserChatRoomsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChatRoomsRequest) ProtoMessage() {}

func (x *GetUserChatRoomsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChatRoomsRequest.ProtoReflect.Descriptor instead.
func (*GetUserChatRoomsRequest) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{4}
}

func (x *GetUserChatRoomsRequest) GetUserId() int32 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserChatRoomsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          int64                  `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Rooms         []*ChatRoomInfo        `protobuf:"bytes,3,rep,name=rooms,proto3" json:"rooms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUserChatRoomsReply) Reset() {
	*x = GetUserChatRoomsReply{}
	mi := &file_chat_v1_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserChatRoomsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserChatRoomsReply) ProtoMessage() {}

func (x *GetUserChatRoomsReply) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserChatRoomsReply.ProtoReflect.Descriptor instead.
func (*GetUserChatRoomsReply) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{5}
}

func (x *GetUserChatRoomsReply) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetUserChatRoomsReply) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetUserChatRoomsReply) GetRooms() []*ChatRoomInfo {
	if x != nil {
		return x.Rooms
	}
	return nil
}

type ChatMessageInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FromId        int32                  `protobuf:"varint,2,opt,name=from_id,json=fromId,proto3" json:"from_id,omitempty"`
	ToId          int32                  `protobuf:"varint,3,opt,name=to_id,json=toId,proto3" json:"to_id,omitempty"`
	FromName      string                 `protobuf:"bytes,4,opt,name=from_name,json=fromName,proto3" json:"from_name,omitempty"`
	ToName        string                 `protobuf:"bytes,5,opt,name=to_name,json=toName,proto3" json:"to_name,omitempty"`
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	MessageType   string                 `protobuf:"bytes,7,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	RoomId        string                 `protobuf:"bytes,8,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	CreatedAt     string                 `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChatMessageInfo) Reset() {
	*x = ChatMessageInfo{}
	mi := &file_chat_v1_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatMessageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessageInfo) ProtoMessage() {}

func (x *ChatMessageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessageInfo.ProtoReflect.Descriptor instead.
func (*ChatMessageInfo) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{6}
}

func (x *ChatMessageInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ChatMessageInfo) GetFromId() int32 {
	if x != nil {
		return x.FromId
	}
	return 0
}

func (x *ChatMessageInfo) GetToId() int32 {
	if x != nil {
		return x.ToId
	}
	return 0
}

func (x *ChatMessageInfo) GetFromName() string {
	if x != nil {
		return x.FromName
	}
	return ""
}

func (x *ChatMessageInfo) GetToName() string {
	if x != nil {
		return x.ToName
	}
	return ""
}

func (x *ChatMessageInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ChatMessageInfo) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *ChatMessageInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ChatMessageInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

type ChatRoomInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	RoomId          string                 `protobuf:"bytes,1,opt,name=room_id,json=roomId,proto3" json:"room_id,omitempty"`
	TargetId        int32                  `protobuf:"varint,2,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	TargetName      string                 `protobuf:"bytes,3,opt,name=target_name,json=targetName,proto3" json:"target_name,omitempty"`
	TargetRole      string                 `protobuf:"bytes,4,opt,name=target_role,json=targetRole,proto3" json:"target_role,omitempty"`
	LastMessage     string                 `protobuf:"bytes,5,opt,name=last_message,json=lastMessage,proto3" json:"last_message,omitempty"`
	LastMessageTime string                 `protobuf:"bytes,6,opt,name=last_message_time,json=lastMessageTime,proto3" json:"last_message_time,omitempty"`
	UnreadCount     int32                  `protobuf:"varint,7,opt,name=unread_count,json=unreadCount,proto3" json:"unread_count,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ChatRoomInfo) Reset() {
	*x = ChatRoomInfo{}
	mi := &file_chat_v1_chat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChatRoomInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatRoomInfo) ProtoMessage() {}

func (x *ChatRoomInfo) ProtoReflect() protoreflect.Message {
	mi := &file_chat_v1_chat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatRoomInfo.ProtoReflect.Descriptor instead.
func (*ChatRoomInfo) Descriptor() ([]byte, []int) {
	return file_chat_v1_chat_proto_rawDescGZIP(), []int{7}
}

func (x *ChatRoomInfo) GetRoomId() string {
	if x != nil {
		return x.RoomId
	}
	return ""
}

func (x *ChatRoomInfo) GetTargetId() int32 {
	if x != nil {
		return x.TargetId
	}
	return 0
}

func (x *ChatRoomInfo) GetTargetName() string {
	if x != nil {
		return x.TargetName
	}
	return ""
}

func (x *ChatRoomInfo) GetTargetRole() string {
	if x != nil {
		return x.TargetRole
	}
	return ""
}

func (x *ChatRoomInfo) GetLastMessage() string {
	if x != nil {
		return x.LastMessage
	}
	return ""
}

func (x *ChatRoomInfo) GetLastMessageTime() string {
	if x != nil {
		return x.LastMessageTime
	}
	return ""
}

func (x *ChatRoomInfo) GetUnreadCount() int32 {
	if x != nil {
		return x.UnreadCount
	}
	return 0
}

var File_chat_v1_chat_proto protoreflect.FileDescriptor

const file_chat_v1_chat_proto_rawDesc = "" +
	"\n" +
	"\x12chat/v1/chat.proto\x1a\x1cgoogle/api/annotations.proto\"~\n" +
	"\x15GetChatHistoryRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\x05R\btargetId\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"\x87\x01\n" +
	"\x13GetChatHistoryReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12,\n" +
	"\bmessages\x18\x03 \x03(\v2\x10.ChatMessageInfoR\bmessages\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x05R\x05total\"\x9c\x01\n" +
	"\x16SaveChatMessageRequest\x12\x17\n" +
	"\afrom_id\x18\x01 \x01(\x05R\x06fromId\x12\x13\n" +
	"\x05to_id\x18\x02 \x01(\x05R\x04toId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12!\n" +
	"\fmessage_type\x18\x04 \x01(\tR\vmessageType\x12\x17\n" +
	"\aroom_id\x18\x05 \x01(\tR\x06roomId\"D\n" +
	"\x14SaveChatMessageReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"2\n" +
	"\x17GetUserChatRoomsRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x05R\x06userId\"j\n" +
	"\x15GetUserChatRoomsReply\x12\x12\n" +
	"\x04code\x18\x01 \x01(\x03R\x04code\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12#\n" +
	"\x05rooms\x18\x03 \x03(\v2\r.ChatRoomInfoR\x05rooms\"\xfa\x01\n" +
	"\x0fChatMessageInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\afrom_id\x18\x02 \x01(\x05R\x06fromId\x12\x13\n" +
	"\x05to_id\x18\x03 \x01(\x05R\x04toId\x12\x1b\n" +
	"\tfrom_name\x18\x04 \x01(\tR\bfromName\x12\x17\n" +
	"\ato_name\x18\x05 \x01(\tR\x06toName\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x12!\n" +
	"\fmessage_type\x18\a \x01(\tR\vmessageType\x12\x17\n" +
	"\aroom_id\x18\b \x01(\tR\x06roomId\x12\x1d\n" +
	"\n" +
	"created_at\x18\t \x01(\tR\tcreatedAt\"\xf8\x01\n" +
	"\fChatRoomInfo\x12\x17\n" +
	"\aroom_id\x18\x01 \x01(\tR\x06roomId\x12\x1b\n" +
	"\ttarget_id\x18\x02 \x01(\x05R\btargetId\x12\x1f\n" +
	"\vtarget_name\x18\x03 \x01(\tR\n" +
	"targetName\x12\x1f\n" +
	"\vtarget_role\x18\x04 \x01(\tR\n" +
	"targetRole\x12!\n" +
	"\flast_message\x18\x05 \x01(\tR\vlastMessage\x12*\n" +
	"\x11last_message_time\x18\x06 \x01(\tR\x0flastMessageTime\x12!\n" +
	"\funread_count\x18\a \x01(\x05R\vunreadCount2\x9e\x02\n" +
	"\x04Chat\x12X\n" +
	"\x0eGetChatHistory\x12\x16.GetChatHistoryRequest\x1a\x14.GetChatHistoryReply\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/chat/history\x12^\n" +
	"\x0fSaveChatMessage\x12\x17.SaveChatMessageRequest\x1a\x15.SaveChatMessageReply\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/v1/chat/message\x12\\\n" +
	"\x10GetUserChatRooms\x12\x18.GetUserChatRoomsRequest\x1a\x16.GetUserChatRoomsReply\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/chat/roomsBE\n" +
	"\x16dev.kratos.api.chat.v1B\vchatProtoV1P\x01Z\x1ckratos_client/api/chat/v1;v1b\x06proto3"

var (
	file_chat_v1_chat_proto_rawDescOnce sync.Once
	file_chat_v1_chat_proto_rawDescData []byte
)

func file_chat_v1_chat_proto_rawDescGZIP() []byte {
	file_chat_v1_chat_proto_rawDescOnce.Do(func() {
		file_chat_v1_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_v1_chat_proto_rawDesc), len(file_chat_v1_chat_proto_rawDesc)))
	})
	return file_chat_v1_chat_proto_rawDescData
}

var file_chat_v1_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_chat_v1_chat_proto_goTypes = []any{
	(*GetChatHistoryRequest)(nil),   // 0: GetChatHistoryRequest
	(*GetChatHistoryReply)(nil),     // 1: GetChatHistoryReply
	(*SaveChatMessageRequest)(nil),  // 2: SaveChatMessageRequest
	(*SaveChatMessageReply)(nil),    // 3: SaveChatMessageReply
	(*GetUserChatRoomsRequest)(nil), // 4: GetUserChatRoomsRequest
	(*GetUserChatRoomsReply)(nil),   // 5: GetUserChatRoomsReply
	(*ChatMessageInfo)(nil),         // 6: ChatMessageInfo
	(*ChatRoomInfo)(nil),            // 7: ChatRoomInfo
}
var file_chat_v1_chat_proto_depIdxs = []int32{
	6, // 0: GetChatHistoryReply.messages:type_name -> ChatMessageInfo
	7, // 1: GetUserChatRoomsReply.rooms:type_name -> ChatRoomInfo
	0, // 2: Chat.GetChatHistory:input_type -> GetChatHistoryRequest
	2, // 3: Chat.SaveChatMessage:input_type -> SaveChatMessageRequest
	4, // 4: Chat.GetUserChatRooms:input_type -> GetUserChatRoomsRequest
	1, // 5: Chat.GetChatHistory:output_type -> GetChatHistoryReply
	3, // 6: Chat.SaveChatMessage:output_type -> SaveChatMessageReply
	5, // 7: Chat.GetUserChatRooms:output_type -> GetUserChatRoomsReply
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_chat_v1_chat_proto_init() }
func file_chat_v1_chat_proto_init() {
	if File_chat_v1_chat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_v1_chat_proto_rawDesc), len(file_chat_v1_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_chat_v1_chat_proto_goTypes,
		DependencyIndexes: file_chat_v1_chat_proto_depIdxs,
		MessageInfos:      file_chat_v1_chat_proto_msgTypes,
	}.Build()
	File_chat_v1_chat_proto = out.File
	file_chat_v1_chat_proto_goTypes = nil
	file_chat_v1_chat_proto_depIdxs = nil
}
