// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: prescription/v1/prescription.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 获取处方列表请求
type ListPrescriptionsRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Status           string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`                                             // 状态过滤
	PrescriptionType string                 `protobuf:"bytes,2,opt,name=prescription_type,json=prescriptionType,proto3" json:"prescription_type,omitempty"` // 处方类型过滤
	StartDate        string                 `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`                      // 开始日期
	EndDate          string                 `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`                            // 结束日期
	Page             int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize         int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListPrescriptionsRequest) Reset() {
	*x = ListPrescriptionsRequest{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrescriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrescriptionsRequest) ProtoMessage() {}

func (x *ListPrescriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrescriptionsRequest.ProtoReflect.Descriptor instead.
func (*ListPrescriptionsRequest) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{0}
}

func (x *ListPrescriptionsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListPrescriptionsRequest) GetPrescriptionType() string {
	if x != nil {
		return x.PrescriptionType
	}
	return ""
}

func (x *ListPrescriptionsRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ListPrescriptionsRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *ListPrescriptionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPrescriptionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取处方列表响应
type ListPrescriptionsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prescriptions []*Prescription        `protobuf:"bytes,1,rep,name=prescriptions,proto3" json:"prescriptions,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrescriptionsReply) Reset() {
	*x = ListPrescriptionsReply{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrescriptionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrescriptionsReply) ProtoMessage() {}

func (x *ListPrescriptionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrescriptionsReply.ProtoReflect.Descriptor instead.
func (*ListPrescriptionsReply) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{1}
}

func (x *ListPrescriptionsReply) GetPrescriptions() []*Prescription {
	if x != nil {
		return x.Prescriptions
	}
	return nil
}

func (x *ListPrescriptionsReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 获取患者处方列表请求
type ListPatientPrescriptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PatientId     uint64                 `protobuf:"varint,1,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPatientPrescriptionsRequest) Reset() {
	*x = ListPatientPrescriptionsRequest{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPatientPrescriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientPrescriptionsRequest) ProtoMessage() {}

func (x *ListPatientPrescriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientPrescriptionsRequest.ProtoReflect.Descriptor instead.
func (*ListPatientPrescriptionsRequest) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{2}
}

func (x *ListPatientPrescriptionsRequest) GetPatientId() uint64 {
	if x != nil {
		return x.PatientId
	}
	return 0
}

func (x *ListPatientPrescriptionsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListPatientPrescriptionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPatientPrescriptionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取患者处方列表响应
type ListPatientPrescriptionsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prescriptions []*Prescription        `protobuf:"bytes,1,rep,name=prescriptions,proto3" json:"prescriptions,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPatientPrescriptionsReply) Reset() {
	*x = ListPatientPrescriptionsReply{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPatientPrescriptionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPatientPrescriptionsReply) ProtoMessage() {}

func (x *ListPatientPrescriptionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPatientPrescriptionsReply.ProtoReflect.Descriptor instead.
func (*ListPatientPrescriptionsReply) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{3}
}

func (x *ListPatientPrescriptionsReply) GetPrescriptions() []*Prescription {
	if x != nil {
		return x.Prescriptions
	}
	return nil
}

func (x *ListPatientPrescriptionsReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 获取医生处方列表请求
type ListDoctorPrescriptionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DoctorId      uint64                 `protobuf:"varint,1,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Page          int32                  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDoctorPrescriptionsRequest) Reset() {
	*x = ListDoctorPrescriptionsRequest{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDoctorPrescriptionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDoctorPrescriptionsRequest) ProtoMessage() {}

func (x *ListDoctorPrescriptionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDoctorPrescriptionsRequest.ProtoReflect.Descriptor instead.
func (*ListDoctorPrescriptionsRequest) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{4}
}

func (x *ListDoctorPrescriptionsRequest) GetDoctorId() uint64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *ListDoctorPrescriptionsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ListDoctorPrescriptionsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListDoctorPrescriptionsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 获取医生处方列表响应
type ListDoctorPrescriptionsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prescriptions []*Prescription        `protobuf:"bytes,1,rep,name=prescriptions,proto3" json:"prescriptions,omitempty"`
	Total         int64                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListDoctorPrescriptionsReply) Reset() {
	*x = ListDoctorPrescriptionsReply{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListDoctorPrescriptionsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListDoctorPrescriptionsReply) ProtoMessage() {}

func (x *ListDoctorPrescriptionsReply) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListDoctorPrescriptionsReply.ProtoReflect.Descriptor instead.
func (*ListDoctorPrescriptionsReply) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{5}
}

func (x *ListDoctorPrescriptionsReply) GetPrescriptions() []*Prescription {
	if x != nil {
		return x.Prescriptions
	}
	return nil
}

func (x *ListDoctorPrescriptionsReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 获取处方详情请求
type GetPrescriptionDetailRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PrescriptionId uint64                 `protobuf:"varint,1,opt,name=prescription_id,json=prescriptionId,proto3" json:"prescription_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetPrescriptionDetailRequest) Reset() {
	*x = GetPrescriptionDetailRequest{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrescriptionDetailRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrescriptionDetailRequest) ProtoMessage() {}

func (x *GetPrescriptionDetailRequest) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrescriptionDetailRequest.ProtoReflect.Descriptor instead.
func (*GetPrescriptionDetailRequest) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{6}
}

func (x *GetPrescriptionDetailRequest) GetPrescriptionId() uint64 {
	if x != nil {
		return x.PrescriptionId
	}
	return 0
}

// 获取处方详情响应
type GetPrescriptionDetailReply struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Prescription  *Prescription           `protobuf:"bytes,1,opt,name=prescription,proto3" json:"prescription,omitempty"`
	Medicines     []*PrescriptionMedicine `protobuf:"bytes,2,rep,name=medicines,proto3" json:"medicines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPrescriptionDetailReply) Reset() {
	*x = GetPrescriptionDetailReply{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrescriptionDetailReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrescriptionDetailReply) ProtoMessage() {}

func (x *GetPrescriptionDetailReply) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrescriptionDetailReply.ProtoReflect.Descriptor instead.
func (*GetPrescriptionDetailReply) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{7}
}

func (x *GetPrescriptionDetailReply) GetPrescription() *Prescription {
	if x != nil {
		return x.Prescription
	}
	return nil
}

func (x *GetPrescriptionDetailReply) GetMedicines() []*PrescriptionMedicine {
	if x != nil {
		return x.Medicines
	}
	return nil
}

// 处方信息
type Prescription struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PrescriptionNo   string                 `protobuf:"bytes,2,opt,name=prescription_no,json=prescriptionNo,proto3" json:"prescription_no,omitempty"`
	DoctorId         uint64                 `protobuf:"varint,3,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	PatientId        uint64                 `protobuf:"varint,4,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	MedicalRecordId  uint64                 `protobuf:"varint,5,opt,name=medical_record_id,json=medicalRecordId,proto3" json:"medical_record_id,omitempty"`
	PrescriptionDate string                 `protobuf:"bytes,6,opt,name=prescription_date,json=prescriptionDate,proto3" json:"prescription_date,omitempty"`
	TotalAmount      string                 `protobuf:"bytes,7,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	PrescriptionType string                 `protobuf:"bytes,8,opt,name=prescription_type,json=prescriptionType,proto3" json:"prescription_type,omitempty"`
	UsageInstruction string                 `protobuf:"bytes,9,opt,name=usage_instruction,json=usageInstruction,proto3" json:"usage_instruction,omitempty"`
	Status           string                 `protobuf:"bytes,10,opt,name=status,proto3" json:"status,omitempty"`
	AuditorId        uint64                 `protobuf:"varint,11,opt,name=auditor_id,json=auditorId,proto3" json:"auditor_id,omitempty"`
	AuditTime        string                 `protobuf:"bytes,12,opt,name=audit_time,json=auditTime,proto3" json:"audit_time,omitempty"`
	AuditNotes       string                 `protobuf:"bytes,13,opt,name=audit_notes,json=auditNotes,proto3" json:"audit_notes,omitempty"`
	CreatedAt        string                 `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string                 `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	// 扩展信息
	DoctorName    string `protobuf:"bytes,16,opt,name=doctor_name,json=doctorName,proto3" json:"doctor_name,omitempty"`
	PatientName   string `protobuf:"bytes,17,opt,name=patient_name,json=patientName,proto3" json:"patient_name,omitempty"`
	AuditorName   string `protobuf:"bytes,18,opt,name=auditor_name,json=auditorName,proto3" json:"auditor_name,omitempty"`
	MedicineCount int32  `protobuf:"varint,19,opt,name=medicine_count,json=medicineCount,proto3" json:"medicine_count,omitempty"` // 药品种类数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Prescription) Reset() {
	*x = Prescription{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Prescription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Prescription) ProtoMessage() {}

func (x *Prescription) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Prescription.ProtoReflect.Descriptor instead.
func (*Prescription) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{8}
}

func (x *Prescription) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Prescription) GetPrescriptionNo() string {
	if x != nil {
		return x.PrescriptionNo
	}
	return ""
}

func (x *Prescription) GetDoctorId() uint64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *Prescription) GetPatientId() uint64 {
	if x != nil {
		return x.PatientId
	}
	return 0
}

func (x *Prescription) GetMedicalRecordId() uint64 {
	if x != nil {
		return x.MedicalRecordId
	}
	return 0
}

func (x *Prescription) GetPrescriptionDate() string {
	if x != nil {
		return x.PrescriptionDate
	}
	return ""
}

func (x *Prescription) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *Prescription) GetPrescriptionType() string {
	if x != nil {
		return x.PrescriptionType
	}
	return ""
}

func (x *Prescription) GetUsageInstruction() string {
	if x != nil {
		return x.UsageInstruction
	}
	return ""
}

func (x *Prescription) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Prescription) GetAuditorId() uint64 {
	if x != nil {
		return x.AuditorId
	}
	return 0
}

func (x *Prescription) GetAuditTime() string {
	if x != nil {
		return x.AuditTime
	}
	return ""
}

func (x *Prescription) GetAuditNotes() string {
	if x != nil {
		return x.AuditNotes
	}
	return ""
}

func (x *Prescription) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Prescription) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Prescription) GetDoctorName() string {
	if x != nil {
		return x.DoctorName
	}
	return ""
}

func (x *Prescription) GetPatientName() string {
	if x != nil {
		return x.PatientName
	}
	return ""
}

func (x *Prescription) GetAuditorName() string {
	if x != nil {
		return x.AuditorName
	}
	return ""
}

func (x *Prescription) GetMedicineCount() int32 {
	if x != nil {
		return x.MedicineCount
	}
	return 0
}

// 处方药品明细
type PrescriptionMedicine struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PrescriptionId uint64                 `protobuf:"varint,2,opt,name=prescription_id,json=prescriptionId,proto3" json:"prescription_id,omitempty"`
	MedicineId     uint64                 `protobuf:"varint,3,opt,name=medicine_id,json=medicineId,proto3" json:"medicine_id,omitempty"`
	Quantity       string                 `protobuf:"bytes,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Unit           string                 `protobuf:"bytes,5,opt,name=unit,proto3" json:"unit,omitempty"`
	UnitPrice      string                 `protobuf:"bytes,6,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	TotalPrice     string                 `protobuf:"bytes,7,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	Dosage         string                 `protobuf:"bytes,8,opt,name=dosage,proto3" json:"dosage,omitempty"`
	Frequency      string                 `protobuf:"bytes,9,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Duration       string                 `protobuf:"bytes,10,opt,name=duration,proto3" json:"duration,omitempty"`
	UsageMethod    string                 `protobuf:"bytes,11,opt,name=usage_method,json=usageMethod,proto3" json:"usage_method,omitempty"`
	Notes          string                 `protobuf:"bytes,12,opt,name=notes,proto3" json:"notes,omitempty"`
	CreatedAt      string                 `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// 扩展信息
	MedicineName  string `protobuf:"bytes,14,opt,name=medicine_name,json=medicineName,proto3" json:"medicine_name,omitempty"`
	MedicineSpec  string `protobuf:"bytes,15,opt,name=medicine_spec,json=medicineSpec,proto3" json:"medicine_spec,omitempty"`
	Manufacturer  string `protobuf:"bytes,16,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PrescriptionMedicine) Reset() {
	*x = PrescriptionMedicine{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrescriptionMedicine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrescriptionMedicine) ProtoMessage() {}

func (x *PrescriptionMedicine) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrescriptionMedicine.ProtoReflect.Descriptor instead.
func (*PrescriptionMedicine) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{9}
}

func (x *PrescriptionMedicine) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PrescriptionMedicine) GetPrescriptionId() uint64 {
	if x != nil {
		return x.PrescriptionId
	}
	return 0
}

func (x *PrescriptionMedicine) GetMedicineId() uint64 {
	if x != nil {
		return x.MedicineId
	}
	return 0
}

func (x *PrescriptionMedicine) GetQuantity() string {
	if x != nil {
		return x.Quantity
	}
	return ""
}

func (x *PrescriptionMedicine) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *PrescriptionMedicine) GetUnitPrice() string {
	if x != nil {
		return x.UnitPrice
	}
	return ""
}

func (x *PrescriptionMedicine) GetTotalPrice() string {
	if x != nil {
		return x.TotalPrice
	}
	return ""
}

func (x *PrescriptionMedicine) GetDosage() string {
	if x != nil {
		return x.Dosage
	}
	return ""
}

func (x *PrescriptionMedicine) GetFrequency() string {
	if x != nil {
		return x.Frequency
	}
	return ""
}

func (x *PrescriptionMedicine) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *PrescriptionMedicine) GetUsageMethod() string {
	if x != nil {
		return x.UsageMethod
	}
	return ""
}

func (x *PrescriptionMedicine) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *PrescriptionMedicine) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PrescriptionMedicine) GetMedicineName() string {
	if x != nil {
		return x.MedicineName
	}
	return ""
}

func (x *PrescriptionMedicine) GetMedicineSpec() string {
	if x != nil {
		return x.MedicineSpec
	}
	return ""
}

func (x *PrescriptionMedicine) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

var File_prescription_v1_prescription_proto protoreflect.FileDescriptor

const file_prescription_v1_prescription_proto_rawDesc = "" +
	"\n" +
	"\"prescription/v1/prescription.proto\x12\x13api.prescription.v1\x1a\x1cgoogle/api/annotations.proto\"\xca\x01\n" +
	"\x18ListPrescriptionsRequest\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12+\n" +
	"\x11prescription_type\x18\x02 \x01(\tR\x10prescriptionType\x12\x1d\n" +
	"\n" +
	"start_date\x18\x03 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x04 \x01(\tR\aendDate\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\"w\n" +
	"\x16ListPrescriptionsReply\x12G\n" +
	"\rprescriptions\x18\x01 \x03(\v2!.api.prescription.v1.PrescriptionR\rprescriptions\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\"\x89\x01\n" +
	"\x1fListPatientPrescriptionsRequest\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x01 \x01(\x04R\tpatientId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"~\n" +
	"\x1dListPatientPrescriptionsReply\x12G\n" +
	"\rprescriptions\x18\x01 \x03(\v2!.api.prescription.v1.PrescriptionR\rprescriptions\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\"\x86\x01\n" +
	"\x1eListDoctorPrescriptionsRequest\x12\x1b\n" +
	"\tdoctor_id\x18\x01 \x01(\x04R\bdoctorId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x12\n" +
	"\x04page\x18\x03 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x04 \x01(\x05R\bpageSize\"}\n" +
	"\x1cListDoctorPrescriptionsReply\x12G\n" +
	"\rprescriptions\x18\x01 \x03(\v2!.api.prescription.v1.PrescriptionR\rprescriptions\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x03R\x05total\"G\n" +
	"\x1cGetPrescriptionDetailRequest\x12'\n" +
	"\x0fprescription_id\x18\x01 \x01(\x04R\x0eprescriptionId\"\xac\x01\n" +
	"\x1aGetPrescriptionDetailReply\x12E\n" +
	"\fprescription\x18\x01 \x01(\v2!.api.prescription.v1.PrescriptionR\fprescription\x12G\n" +
	"\tmedicines\x18\x02 \x03(\v2).api.prescription.v1.PrescriptionMedicineR\tmedicines\"\x9c\x05\n" +
	"\fPrescription\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12'\n" +
	"\x0fprescription_no\x18\x02 \x01(\tR\x0eprescriptionNo\x12\x1b\n" +
	"\tdoctor_id\x18\x03 \x01(\x04R\bdoctorId\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x04 \x01(\x04R\tpatientId\x12*\n" +
	"\x11medical_record_id\x18\x05 \x01(\x04R\x0fmedicalRecordId\x12+\n" +
	"\x11prescription_date\x18\x06 \x01(\tR\x10prescriptionDate\x12!\n" +
	"\ftotal_amount\x18\a \x01(\tR\vtotalAmount\x12+\n" +
	"\x11prescription_type\x18\b \x01(\tR\x10prescriptionType\x12+\n" +
	"\x11usage_instruction\x18\t \x01(\tR\x10usageInstruction\x12\x16\n" +
	"\x06status\x18\n" +
	" \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"auditor_id\x18\v \x01(\x04R\tauditorId\x12\x1d\n" +
	"\n" +
	"audit_time\x18\f \x01(\tR\tauditTime\x12\x1f\n" +
	"\vaudit_notes\x18\r \x01(\tR\n" +
	"auditNotes\x12\x1d\n" +
	"\n" +
	"created_at\x18\x0e \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x0f \x01(\tR\tupdatedAt\x12\x1f\n" +
	"\vdoctor_name\x18\x10 \x01(\tR\n" +
	"doctorName\x12!\n" +
	"\fpatient_name\x18\x11 \x01(\tR\vpatientName\x12!\n" +
	"\fauditor_name\x18\x12 \x01(\tR\vauditorName\x12%\n" +
	"\x0emedicine_count\x18\x13 \x01(\x05R\rmedicineCount\"\xf8\x03\n" +
	"\x14PrescriptionMedicine\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12'\n" +
	"\x0fprescription_id\x18\x02 \x01(\x04R\x0eprescriptionId\x12\x1f\n" +
	"\vmedicine_id\x18\x03 \x01(\x04R\n" +
	"medicineId\x12\x1a\n" +
	"\bquantity\x18\x04 \x01(\tR\bquantity\x12\x12\n" +
	"\x04unit\x18\x05 \x01(\tR\x04unit\x12\x1d\n" +
	"\n" +
	"unit_price\x18\x06 \x01(\tR\tunitPrice\x12\x1f\n" +
	"\vtotal_price\x18\a \x01(\tR\n" +
	"totalPrice\x12\x16\n" +
	"\x06dosage\x18\b \x01(\tR\x06dosage\x12\x1c\n" +
	"\tfrequency\x18\t \x01(\tR\tfrequency\x12\x1a\n" +
	"\bduration\x18\n" +
	" \x01(\tR\bduration\x12!\n" +
	"\fusage_method\x18\v \x01(\tR\vusageMethod\x12\x14\n" +
	"\x05notes\x18\f \x01(\tR\x05notes\x12\x1d\n" +
	"\n" +
	"created_at\x18\r \x01(\tR\tcreatedAt\x12#\n" +
	"\rmedicine_name\x18\x0e \x01(\tR\fmedicineName\x12#\n" +
	"\rmedicine_spec\x18\x0f \x01(\tR\fmedicineSpec\x12\"\n" +
	"\fmanufacturer\x18\x10 \x01(\tR\fmanufacturer2\xc8\x05\n" +
	"\x13PrescriptionService\x12\x8e\x01\n" +
	"\x11ListPrescriptions\x12-.api.prescription.v1.ListPrescriptionsRequest\x1a+.api.prescription.v1.ListPrescriptionsReply\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/prescriptions\x12\xb9\x01\n" +
	"\x18ListPatientPrescriptions\x124.api.prescription.v1.ListPatientPrescriptionsRequest\x1a2.api.prescription.v1.ListPatientPrescriptionsReply\"3\x82\xd3\xe4\x93\x02-\x12+/api/v1/patients/{patient_id}/prescriptions\x12\xb4\x01\n" +
	"\x17ListDoctorPrescriptions\x123.api.prescription.v1.ListDoctorPrescriptionsRequest\x1a1.api.prescription.v1.ListDoctorPrescriptionsReply\"1\x82\xd3\xe4\x93\x02+\x12)/api/v1/doctors/{doctor_id}/prescriptions\x12\xac\x01\n" +
	"\x15GetPrescriptionDetail\x121.api.prescription.v1.GetPrescriptionDetailRequest\x1a/.api.prescription.v1.GetPrescriptionDetailReply\"/\x82\xd3\xe4\x93\x02)\x12'/api/v1/prescriptions/{prescription_id}B&Z$kratos_client/api/prescription/v1;v1b\x06proto3"

var (
	file_prescription_v1_prescription_proto_rawDescOnce sync.Once
	file_prescription_v1_prescription_proto_rawDescData []byte
)

func file_prescription_v1_prescription_proto_rawDescGZIP() []byte {
	file_prescription_v1_prescription_proto_rawDescOnce.Do(func() {
		file_prescription_v1_prescription_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_prescription_v1_prescription_proto_rawDesc), len(file_prescription_v1_prescription_proto_rawDesc)))
	})
	return file_prescription_v1_prescription_proto_rawDescData
}

var file_prescription_v1_prescription_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_prescription_v1_prescription_proto_goTypes = []any{
	(*ListPrescriptionsRequest)(nil),        // 0: api.prescription.v1.ListPrescriptionsRequest
	(*ListPrescriptionsReply)(nil),          // 1: api.prescription.v1.ListPrescriptionsReply
	(*ListPatientPrescriptionsRequest)(nil), // 2: api.prescription.v1.ListPatientPrescriptionsRequest
	(*ListPatientPrescriptionsReply)(nil),   // 3: api.prescription.v1.ListPatientPrescriptionsReply
	(*ListDoctorPrescriptionsRequest)(nil),  // 4: api.prescription.v1.ListDoctorPrescriptionsRequest
	(*ListDoctorPrescriptionsReply)(nil),    // 5: api.prescription.v1.ListDoctorPrescriptionsReply
	(*GetPrescriptionDetailRequest)(nil),    // 6: api.prescription.v1.GetPrescriptionDetailRequest
	(*GetPrescriptionDetailReply)(nil),      // 7: api.prescription.v1.GetPrescriptionDetailReply
	(*Prescription)(nil),                    // 8: api.prescription.v1.Prescription
	(*PrescriptionMedicine)(nil),            // 9: api.prescription.v1.PrescriptionMedicine
}
var file_prescription_v1_prescription_proto_depIdxs = []int32{
	8, // 0: api.prescription.v1.ListPrescriptionsReply.prescriptions:type_name -> api.prescription.v1.Prescription
	8, // 1: api.prescription.v1.ListPatientPrescriptionsReply.prescriptions:type_name -> api.prescription.v1.Prescription
	8, // 2: api.prescription.v1.ListDoctorPrescriptionsReply.prescriptions:type_name -> api.prescription.v1.Prescription
	8, // 3: api.prescription.v1.GetPrescriptionDetailReply.prescription:type_name -> api.prescription.v1.Prescription
	9, // 4: api.prescription.v1.GetPrescriptionDetailReply.medicines:type_name -> api.prescription.v1.PrescriptionMedicine
	0, // 5: api.prescription.v1.PrescriptionService.ListPrescriptions:input_type -> api.prescription.v1.ListPrescriptionsRequest
	2, // 6: api.prescription.v1.PrescriptionService.ListPatientPrescriptions:input_type -> api.prescription.v1.ListPatientPrescriptionsRequest
	4, // 7: api.prescription.v1.PrescriptionService.ListDoctorPrescriptions:input_type -> api.prescription.v1.ListDoctorPrescriptionsRequest
	6, // 8: api.prescription.v1.PrescriptionService.GetPrescriptionDetail:input_type -> api.prescription.v1.GetPrescriptionDetailRequest
	1, // 9: api.prescription.v1.PrescriptionService.ListPrescriptions:output_type -> api.prescription.v1.ListPrescriptionsReply
	3, // 10: api.prescription.v1.PrescriptionService.ListPatientPrescriptions:output_type -> api.prescription.v1.ListPatientPrescriptionsReply
	5, // 11: api.prescription.v1.PrescriptionService.ListDoctorPrescriptions:output_type -> api.prescription.v1.ListDoctorPrescriptionsReply
	7, // 12: api.prescription.v1.PrescriptionService.GetPrescriptionDetail:output_type -> api.prescription.v1.GetPrescriptionDetailReply
	9, // [9:13] is the sub-list for method output_type
	5, // [5:9] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_prescription_v1_prescription_proto_init() }
func file_prescription_v1_prescription_proto_init() {
	if File_prescription_v1_prescription_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_prescription_v1_prescription_proto_rawDesc), len(file_prescription_v1_prescription_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prescription_v1_prescription_proto_goTypes,
		DependencyIndexes: file_prescription_v1_prescription_proto_depIdxs,
		MessageInfos:      file_prescription_v1_prescription_proto_msgTypes,
	}.Build()
	File_prescription_v1_prescription_proto = out.File
	file_prescription_v1_prescription_proto_goTypes = nil
	file_prescription_v1_prescription_proto_depIdxs = nil
}
