syntax = "proto3";

package api.prescription.v1;

import "google/api/annotations.proto";

option go_package = "kratos_client/api/prescription/v1;v1";

// 处方服务
service PrescriptionService {
  // 获取处方列表
  rpc ListPrescriptions(ListPrescriptionsRequest) returns (ListPrescriptionsReply) {
    option (google.api.http) = {
      get: "/api/v1/prescriptions"
    };
  }
  
  // 获取患者处方列表
  rpc ListPatientPrescriptions(ListPatientPrescriptionsRequest) returns (ListPatientPrescriptionsReply) {
    option (google.api.http) = {
      get: "/api/v1/patients/{patient_id}/prescriptions"
    };
  }
  
  // 获取医生处方列表
  rpc ListDoctorPrescriptions(ListDoctorPrescriptionsRequest) returns (ListDoctorPrescriptionsReply) {
    option (google.api.http) = {
      get: "/api/v1/doctors/{doctor_id}/prescriptions"
    };
  }
  
  // 获取处方详情
  rpc GetPrescriptionDetail(GetPrescriptionDetailRequest) returns (GetPrescriptionDetailReply) {
    option (google.api.http) = {
      get: "/api/v1/prescriptions/{prescription_id}"
    };
  }
}

// 获取处方列表请求
message ListPrescriptionsRequest {
  string status = 1; // 状态过滤
  string prescription_type = 2; // 处方类型过滤
  string start_date = 3; // 开始日期
  string end_date = 4; // 结束日期
  int32 page = 5;
  int32 page_size = 6;
}

// 获取处方列表响应
message ListPrescriptionsReply {
  repeated Prescription prescriptions = 1;
  int64 total = 2;
}

// 获取患者处方列表请求
message ListPatientPrescriptionsRequest {
  uint64 patient_id = 1;
  string status = 2;
  int32 page = 3;
  int32 page_size = 4;
}

// 获取患者处方列表响应
message ListPatientPrescriptionsReply {
  repeated Prescription prescriptions = 1;
  int64 total = 2;
}

// 获取医生处方列表请求
message ListDoctorPrescriptionsRequest {
  uint64 doctor_id = 1;
  string status = 2;
  int32 page = 3;
  int32 page_size = 4;
}

// 获取医生处方列表响应
message ListDoctorPrescriptionsReply {
  repeated Prescription prescriptions = 1;
  int64 total = 2;
}

// 获取处方详情请求
message GetPrescriptionDetailRequest {
  uint64 prescription_id = 1;
}

// 获取处方详情响应
message GetPrescriptionDetailReply {
  Prescription prescription = 1;
  repeated PrescriptionMedicine medicines = 2;
}

// 处方信息
message Prescription {
  uint64 id = 1;
  string prescription_no = 2;
  uint64 doctor_id = 3;
  uint64 patient_id = 4;
  uint64 medical_record_id = 5;
  string prescription_date = 6;
  string total_amount = 7;
  string prescription_type = 8;
  string usage_instruction = 9;
  string status = 10;
  uint64 auditor_id = 11;
  string audit_time = 12;
  string audit_notes = 13;
  string created_at = 14;
  string updated_at = 15;
  
  // 扩展信息
  string doctor_name = 16;
  string patient_name = 17;
  string auditor_name = 18;
  int32 medicine_count = 19; // 药品种类数量
}

// 处方药品明细
message PrescriptionMedicine {
  uint64 id = 1;
  uint64 prescription_id = 2;
  uint64 medicine_id = 3;
  string quantity = 4;
  string unit = 5;
  string unit_price = 6;
  string total_price = 7;
  string dosage = 8;
  string frequency = 9;
  string duration = 10;
  string usage_method = 11;
  string notes = 12;
  string created_at = 13;
  
  // 扩展信息
  string medicine_name = 14;
  string medicine_spec = 15;
  string manufacturer = 16;
}