// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: prescription/v1/prescription.proto

package v1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Prescription status enum
type PrescriptionStatus int32

const (
	PrescriptionStatus_PRESCRIPTION_STATUS_UNSPECIFIED PrescriptionStatus = 0
	PrescriptionStatus_PRESCRIPTION_STATUS_DRAFT       PrescriptionStatus = 1
	PrescriptionStatus_PRESCRIPTION_STATUS_PENDING     PrescriptionStatus = 2
	PrescriptionStatus_PRESCRIPTION_STATUS_CONFIRMED   PrescriptionStatus = 3
	PrescriptionStatus_PRESCRIPTION_STATUS_DISPENSED   PrescriptionStatus = 4
	PrescriptionStatus_PRESCRIPTION_STATUS_CANCELLED   PrescriptionStatus = 5
)

// Enum value maps for PrescriptionStatus.
var (
	PrescriptionStatus_name = map[int32]string{
		0: "PRESCRIPTION_STATUS_UNSPECIFIED",
		1: "PRESCRIPTION_STATUS_DRAFT",
		2: "PRESCRIPTION_STATUS_PENDING",
		3: "PRESCRIPTION_STATUS_CONFIRMED",
		4: "PRESCRIPTION_STATUS_DISPENSED",
		5: "PRESCRIPTION_STATUS_CANCELLED",
	}
	PrescriptionStatus_value = map[string]int32{
		"PRESCRIPTION_STATUS_UNSPECIFIED": 0,
		"PRESCRIPTION_STATUS_DRAFT":       1,
		"PRESCRIPTION_STATUS_PENDING":     2,
		"PRESCRIPTION_STATUS_CONFIRMED":   3,
		"PRESCRIPTION_STATUS_DISPENSED":   4,
		"PRESCRIPTION_STATUS_CANCELLED":   5,
	}
)

func (x PrescriptionStatus) Enum() *PrescriptionStatus {
	p := new(PrescriptionStatus)
	*p = x
	return p
}

func (x PrescriptionStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrescriptionStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_prescription_v1_prescription_proto_enumTypes[0].Descriptor()
}

func (PrescriptionStatus) Type() protoreflect.EnumType {
	return &file_prescription_v1_prescription_proto_enumTypes[0]
}

func (x PrescriptionStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrescriptionStatus.Descriptor instead.
func (PrescriptionStatus) EnumDescriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{0}
}

// Prescription type enum
type PrescriptionType int32

const (
	PrescriptionType_PRESCRIPTION_TYPE_UNSPECIFIED PrescriptionType = 0
	PrescriptionType_PRESCRIPTION_TYPE_WESTERN     PrescriptionType = 1
	PrescriptionType_PRESCRIPTION_TYPE_CHINESE     PrescriptionType = 2
	PrescriptionType_PRESCRIPTION_TYPE_MIXED       PrescriptionType = 3
)

// Enum value maps for PrescriptionType.
var (
	PrescriptionType_name = map[int32]string{
		0: "PRESCRIPTION_TYPE_UNSPECIFIED",
		1: "PRESCRIPTION_TYPE_WESTERN",
		2: "PRESCRIPTION_TYPE_CHINESE",
		3: "PRESCRIPTION_TYPE_MIXED",
	}
	PrescriptionType_value = map[string]int32{
		"PRESCRIPTION_TYPE_UNSPECIFIED": 0,
		"PRESCRIPTION_TYPE_WESTERN":     1,
		"PRESCRIPTION_TYPE_CHINESE":     2,
		"PRESCRIPTION_TYPE_MIXED":       3,
	}
)

func (x PrescriptionType) Enum() *PrescriptionType {
	p := new(PrescriptionType)
	*p = x
	return p
}

func (x PrescriptionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrescriptionType) Descriptor() protoreflect.EnumDescriptor {
	return file_prescription_v1_prescription_proto_enumTypes[1].Descriptor()
}

func (PrescriptionType) Type() protoreflect.EnumType {
	return &file_prescription_v1_prescription_proto_enumTypes[1]
}

func (x PrescriptionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrescriptionType.Descriptor instead.
func (PrescriptionType) EnumDescriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{1}
}

// Prescription information
type PrescriptionInfo struct {
	state            protoimpl.MessageState      `protogen:"open.v1"`
	Id               uint64                      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PrescriptionNo   string                      `protobuf:"bytes,2,opt,name=prescription_no,json=prescriptionNo,proto3" json:"prescription_no,omitempty"`
	DoctorId         uint64                      `protobuf:"varint,3,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	PatientId        uint64                      `protobuf:"varint,4,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	MedicalRecordId  uint64                      `protobuf:"varint,5,opt,name=medical_record_id,json=medicalRecordId,proto3" json:"medical_record_id,omitempty"`
	PrescriptionDate string                      `protobuf:"bytes,6,opt,name=prescription_date,json=prescriptionDate,proto3" json:"prescription_date,omitempty"`
	TotalAmount      float64                     `protobuf:"fixed64,7,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	PrescriptionType PrescriptionType            `protobuf:"varint,8,opt,name=prescription_type,json=prescriptionType,proto3,enum=api.prescription.v1.PrescriptionType" json:"prescription_type,omitempty"`
	UsageInstruction string                      `protobuf:"bytes,9,opt,name=usage_instruction,json=usageInstruction,proto3" json:"usage_instruction,omitempty"`
	Status           PrescriptionStatus          `protobuf:"varint,10,opt,name=status,proto3,enum=api.prescription.v1.PrescriptionStatus" json:"status,omitempty"`
	AuditorId        uint64                      `protobuf:"varint,11,opt,name=auditor_id,json=auditorId,proto3" json:"auditor_id,omitempty"`
	AuditTime        string                      `protobuf:"bytes,12,opt,name=audit_time,json=auditTime,proto3" json:"audit_time,omitempty"`
	AuditNotes       string                      `protobuf:"bytes,13,opt,name=audit_notes,json=auditNotes,proto3" json:"audit_notes,omitempty"`
	Medicines        []*PrescriptionMedicineInfo `protobuf:"bytes,14,rep,name=medicines,proto3" json:"medicines,omitempty"`
	CreatedAt        string                      `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string                      `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *PrescriptionInfo) Reset() {
	*x = PrescriptionInfo{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrescriptionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrescriptionInfo) ProtoMessage() {}

func (x *PrescriptionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrescriptionInfo.ProtoReflect.Descriptor instead.
func (*PrescriptionInfo) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{0}
}

func (x *PrescriptionInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PrescriptionInfo) GetPrescriptionNo() string {
	if x != nil {
		return x.PrescriptionNo
	}
	return ""
}

func (x *PrescriptionInfo) GetDoctorId() uint64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *PrescriptionInfo) GetPatientId() uint64 {
	if x != nil {
		return x.PatientId
	}
	return 0
}

func (x *PrescriptionInfo) GetMedicalRecordId() uint64 {
	if x != nil {
		return x.MedicalRecordId
	}
	return 0
}

func (x *PrescriptionInfo) GetPrescriptionDate() string {
	if x != nil {
		return x.PrescriptionDate
	}
	return ""
}

func (x *PrescriptionInfo) GetTotalAmount() float64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *PrescriptionInfo) GetPrescriptionType() PrescriptionType {
	if x != nil {
		return x.PrescriptionType
	}
	return PrescriptionType_PRESCRIPTION_TYPE_UNSPECIFIED
}

func (x *PrescriptionInfo) GetUsageInstruction() string {
	if x != nil {
		return x.UsageInstruction
	}
	return ""
}

func (x *PrescriptionInfo) GetStatus() PrescriptionStatus {
	if x != nil {
		return x.Status
	}
	return PrescriptionStatus_PRESCRIPTION_STATUS_UNSPECIFIED
}

func (x *PrescriptionInfo) GetAuditorId() uint64 {
	if x != nil {
		return x.AuditorId
	}
	return 0
}

func (x *PrescriptionInfo) GetAuditTime() string {
	if x != nil {
		return x.AuditTime
	}
	return ""
}

func (x *PrescriptionInfo) GetAuditNotes() string {
	if x != nil {
		return x.AuditNotes
	}
	return ""
}

func (x *PrescriptionInfo) GetMedicines() []*PrescriptionMedicineInfo {
	if x != nil {
		return x.Medicines
	}
	return nil
}

func (x *PrescriptionInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PrescriptionInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// Prescription medicine information
type PrescriptionMedicineInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	PrescriptionId uint64                 `protobuf:"varint,2,opt,name=prescription_id,json=prescriptionId,proto3" json:"prescription_id,omitempty"`
	MedicineId     uint64                 `protobuf:"varint,3,opt,name=medicine_id,json=medicineId,proto3" json:"medicine_id,omitempty"`
	MedicineName   string                 `protobuf:"bytes,4,opt,name=medicine_name,json=medicineName,proto3" json:"medicine_name,omitempty"`
	MedicineCode   string                 `protobuf:"bytes,5,opt,name=medicine_code,json=medicineCode,proto3" json:"medicine_code,omitempty"`
	Specification  string                 `protobuf:"bytes,6,opt,name=specification,proto3" json:"specification,omitempty"`
	Manufacturer   string                 `protobuf:"bytes,7,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	Quantity       float64                `protobuf:"fixed64,8,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Unit           string                 `protobuf:"bytes,9,opt,name=unit,proto3" json:"unit,omitempty"`
	UnitPrice      float64                `protobuf:"fixed64,10,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price,omitempty"`
	TotalPrice     float64                `protobuf:"fixed64,11,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`
	Dosage         string                 `protobuf:"bytes,12,opt,name=dosage,proto3" json:"dosage,omitempty"`
	Frequency      string                 `protobuf:"bytes,13,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Duration       string                 `protobuf:"bytes,14,opt,name=duration,proto3" json:"duration,omitempty"`
	UsageMethod    string                 `protobuf:"bytes,15,opt,name=usage_method,json=usageMethod,proto3" json:"usage_method,omitempty"`
	Notes          string                 `protobuf:"bytes,16,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PrescriptionMedicineInfo) Reset() {
	*x = PrescriptionMedicineInfo{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PrescriptionMedicineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrescriptionMedicineInfo) ProtoMessage() {}

func (x *PrescriptionMedicineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrescriptionMedicineInfo.ProtoReflect.Descriptor instead.
func (*PrescriptionMedicineInfo) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{1}
}

func (x *PrescriptionMedicineInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PrescriptionMedicineInfo) GetPrescriptionId() uint64 {
	if x != nil {
		return x.PrescriptionId
	}
	return 0
}

func (x *PrescriptionMedicineInfo) GetMedicineId() uint64 {
	if x != nil {
		return x.MedicineId
	}
	return 0
}

func (x *PrescriptionMedicineInfo) GetMedicineName() string {
	if x != nil {
		return x.MedicineName
	}
	return ""
}

func (x *PrescriptionMedicineInfo) GetMedicineCode() string {
	if x != nil {
		return x.MedicineCode
	}
	return ""
}

func (x *PrescriptionMedicineInfo) GetSpecification() string {
	if x != nil {
		return x.Specification
	}
	return ""
}

func (x *PrescriptionMedicineInfo) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *PrescriptionMedicineInfo) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PrescriptionMedicineInfo) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *PrescriptionMedicineInfo) GetUnitPrice() float64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *PrescriptionMedicineInfo) GetTotalPrice() float64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *PrescriptionMedicineInfo) GetDosage() string {
	if x != nil {
		return x.Dosage
	}
	return ""
}

func (x *PrescriptionMedicineInfo) GetFrequency() string {
	if x != nil {
		return x.Frequency
	}
	return ""
}

func (x *PrescriptionMedicineInfo) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *PrescriptionMedicineInfo) GetUsageMethod() string {
	if x != nil {
		return x.UsageMethod
	}
	return ""
}

func (x *PrescriptionMedicineInfo) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

// Medicine information
type MedicineInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MedicineCode      string                 `protobuf:"bytes,2,opt,name=medicine_code,json=medicineCode,proto3" json:"medicine_code,omitempty"`
	Name              string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	GenericName       string                 `protobuf:"bytes,4,opt,name=generic_name,json=genericName,proto3" json:"generic_name,omitempty"`
	BrandName         string                 `protobuf:"bytes,5,opt,name=brand_name,json=brandName,proto3" json:"brand_name,omitempty"`
	Specification     string                 `protobuf:"bytes,6,opt,name=specification,proto3" json:"specification,omitempty"`
	DosageForm        string                 `protobuf:"bytes,7,opt,name=dosage_form,json=dosageForm,proto3" json:"dosage_form,omitempty"`
	Manufacturer      string                 `protobuf:"bytes,8,opt,name=manufacturer,proto3" json:"manufacturer,omitempty"`
	ApprovalNumber    string                 `protobuf:"bytes,9,opt,name=approval_number,json=approvalNumber,proto3" json:"approval_number,omitempty"`
	Category          string                 `protobuf:"bytes,10,opt,name=category,proto3" json:"category,omitempty"`
	PrescriptionType  string                 `protobuf:"bytes,11,opt,name=prescription_type,json=prescriptionType,proto3" json:"prescription_type,omitempty"`
	Unit              string                 `protobuf:"bytes,12,opt,name=unit,proto3" json:"unit,omitempty"`
	Price             float64                `protobuf:"fixed64,13,opt,name=price,proto3" json:"price,omitempty"`
	Indications       string                 `protobuf:"bytes,14,opt,name=indications,proto3" json:"indications,omitempty"`
	Contraindications string                 `protobuf:"bytes,15,opt,name=contraindications,proto3" json:"contraindications,omitempty"`
	SideEffects       string                 `protobuf:"bytes,16,opt,name=side_effects,json=sideEffects,proto3" json:"side_effects,omitempty"`
	DosageUsage       string                 `protobuf:"bytes,17,opt,name=dosage_usage,json=dosageUsage,proto3" json:"dosage_usage,omitempty"`
	StorageConditions string                 `protobuf:"bytes,18,opt,name=storage_conditions,json=storageConditions,proto3" json:"storage_conditions,omitempty"`
	ShelfLife         int32                  `protobuf:"varint,19,opt,name=shelf_life,json=shelfLife,proto3" json:"shelf_life,omitempty"`
	ImageUrl          string                 `protobuf:"bytes,20,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Status            string                 `protobuf:"bytes,21,opt,name=status,proto3" json:"status,omitempty"`
	StockQuantity     float64                `protobuf:"fixed64,22,opt,name=stock_quantity,json=stockQuantity,proto3" json:"stock_quantity,omitempty"`
	AvailableQuantity float64                `protobuf:"fixed64,23,opt,name=available_quantity,json=availableQuantity,proto3" json:"available_quantity,omitempty"`
	MinStockLevel     float64                `protobuf:"fixed64,24,opt,name=min_stock_level,json=minStockLevel,proto3" json:"min_stock_level,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *MedicineInfo) Reset() {
	*x = MedicineInfo{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MedicineInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MedicineInfo) ProtoMessage() {}

func (x *MedicineInfo) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MedicineInfo.ProtoReflect.Descriptor instead.
func (*MedicineInfo) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{2}
}

func (x *MedicineInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MedicineInfo) GetMedicineCode() string {
	if x != nil {
		return x.MedicineCode
	}
	return ""
}

func (x *MedicineInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MedicineInfo) GetGenericName() string {
	if x != nil {
		return x.GenericName
	}
	return ""
}

func (x *MedicineInfo) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *MedicineInfo) GetSpecification() string {
	if x != nil {
		return x.Specification
	}
	return ""
}

func (x *MedicineInfo) GetDosageForm() string {
	if x != nil {
		return x.DosageForm
	}
	return ""
}

func (x *MedicineInfo) GetManufacturer() string {
	if x != nil {
		return x.Manufacturer
	}
	return ""
}

func (x *MedicineInfo) GetApprovalNumber() string {
	if x != nil {
		return x.ApprovalNumber
	}
	return ""
}

func (x *MedicineInfo) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *MedicineInfo) GetPrescriptionType() string {
	if x != nil {
		return x.PrescriptionType
	}
	return ""
}

func (x *MedicineInfo) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *MedicineInfo) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *MedicineInfo) GetIndications() string {
	if x != nil {
		return x.Indications
	}
	return ""
}

func (x *MedicineInfo) GetContraindications() string {
	if x != nil {
		return x.Contraindications
	}
	return ""
}

func (x *MedicineInfo) GetSideEffects() string {
	if x != nil {
		return x.SideEffects
	}
	return ""
}

func (x *MedicineInfo) GetDosageUsage() string {
	if x != nil {
		return x.DosageUsage
	}
	return ""
}

func (x *MedicineInfo) GetStorageConditions() string {
	if x != nil {
		return x.StorageConditions
	}
	return ""
}

func (x *MedicineInfo) GetShelfLife() int32 {
	if x != nil {
		return x.ShelfLife
	}
	return 0
}

func (x *MedicineInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *MedicineInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MedicineInfo) GetStockQuantity() float64 {
	if x != nil {
		return x.StockQuantity
	}
	return 0
}

func (x *MedicineInfo) GetAvailableQuantity() float64 {
	if x != nil {
		return x.AvailableQuantity
	}
	return 0
}

func (x *MedicineInfo) GetMinStockLevel() float64 {
	if x != nil {
		return x.MinStockLevel
	}
	return 0
}

// Drug interaction information
type DrugInteractionInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MedicineId_1   uint64                 `protobuf:"varint,1,opt,name=medicine_id_1,json=medicineId1,proto3" json:"medicine_id_1,omitempty"`
	MedicineName_1 string                 `protobuf:"bytes,2,opt,name=medicine_name_1,json=medicineName1,proto3" json:"medicine_name_1,omitempty"`
	MedicineId_2   uint64                 `protobuf:"varint,3,opt,name=medicine_id_2,json=medicineId2,proto3" json:"medicine_id_2,omitempty"`
	MedicineName_2 string                 `protobuf:"bytes,4,opt,name=medicine_name_2,json=medicineName2,proto3" json:"medicine_name_2,omitempty"`
	Severity       string                 `protobuf:"bytes,5,opt,name=severity,proto3" json:"severity,omitempty"`
	Description    string                 `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Recommendation string                 `protobuf:"bytes,7,opt,name=recommendation,proto3" json:"recommendation,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DrugInteractionInfo) Reset() {
	*x = DrugInteractionInfo{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DrugInteractionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DrugInteractionInfo) ProtoMessage() {}

func (x *DrugInteractionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DrugInteractionInfo.ProtoReflect.Descriptor instead.
func (*DrugInteractionInfo) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{3}
}

func (x *DrugInteractionInfo) GetMedicineId_1() uint64 {
	if x != nil {
		return x.MedicineId_1
	}
	return 0
}

func (x *DrugInteractionInfo) GetMedicineName_1() string {
	if x != nil {
		return x.MedicineName_1
	}
	return ""
}

func (x *DrugInteractionInfo) GetMedicineId_2() uint64 {
	if x != nil {
		return x.MedicineId_2
	}
	return 0
}

func (x *DrugInteractionInfo) GetMedicineName_2() string {
	if x != nil {
		return x.MedicineName_2
	}
	return ""
}

func (x *DrugInteractionInfo) GetSeverity() string {
	if x != nil {
		return x.Severity
	}
	return ""
}

func (x *DrugInteractionInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *DrugInteractionInfo) GetRecommendation() string {
	if x != nil {
		return x.Recommendation
	}
	return ""
}

// Create prescription request
type CreatePrescriptionReq struct {
	state            protoimpl.MessageState           `protogen:"open.v1"`
	DoctorId         uint64                           `protobuf:"varint,1,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	PatientId        uint64                           `protobuf:"varint,2,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	MedicalRecordId  uint64                           `protobuf:"varint,3,opt,name=medical_record_id,json=medicalRecordId,proto3" json:"medical_record_id,omitempty"`
	PrescriptionType PrescriptionType                 `protobuf:"varint,4,opt,name=prescription_type,json=prescriptionType,proto3,enum=api.prescription.v1.PrescriptionType" json:"prescription_type,omitempty"`
	UsageInstruction string                           `protobuf:"bytes,5,opt,name=usage_instruction,json=usageInstruction,proto3" json:"usage_instruction,omitempty"`
	Medicines        []*CreatePrescriptionMedicineReq `protobuf:"bytes,6,rep,name=medicines,proto3" json:"medicines,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *CreatePrescriptionReq) Reset() {
	*x = CreatePrescriptionReq{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrescriptionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrescriptionReq) ProtoMessage() {}

func (x *CreatePrescriptionReq) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrescriptionReq.ProtoReflect.Descriptor instead.
func (*CreatePrescriptionReq) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{4}
}

func (x *CreatePrescriptionReq) GetDoctorId() uint64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *CreatePrescriptionReq) GetPatientId() uint64 {
	if x != nil {
		return x.PatientId
	}
	return 0
}

func (x *CreatePrescriptionReq) GetMedicalRecordId() uint64 {
	if x != nil {
		return x.MedicalRecordId
	}
	return 0
}

func (x *CreatePrescriptionReq) GetPrescriptionType() PrescriptionType {
	if x != nil {
		return x.PrescriptionType
	}
	return PrescriptionType_PRESCRIPTION_TYPE_UNSPECIFIED
}

func (x *CreatePrescriptionReq) GetUsageInstruction() string {
	if x != nil {
		return x.UsageInstruction
	}
	return ""
}

func (x *CreatePrescriptionReq) GetMedicines() []*CreatePrescriptionMedicineReq {
	if x != nil {
		return x.Medicines
	}
	return nil
}

type CreatePrescriptionMedicineReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MedicineId    uint64                 `protobuf:"varint,1,opt,name=medicine_id,json=medicineId,proto3" json:"medicine_id,omitempty"`
	Quantity      float64                `protobuf:"fixed64,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Dosage        string                 `protobuf:"bytes,3,opt,name=dosage,proto3" json:"dosage,omitempty"`
	Frequency     string                 `protobuf:"bytes,4,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Duration      string                 `protobuf:"bytes,5,opt,name=duration,proto3" json:"duration,omitempty"`
	UsageMethod   string                 `protobuf:"bytes,6,opt,name=usage_method,json=usageMethod,proto3" json:"usage_method,omitempty"`
	Notes         string                 `protobuf:"bytes,7,opt,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePrescriptionMedicineReq) Reset() {
	*x = CreatePrescriptionMedicineReq{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrescriptionMedicineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrescriptionMedicineReq) ProtoMessage() {}

func (x *CreatePrescriptionMedicineReq) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrescriptionMedicineReq.ProtoReflect.Descriptor instead.
func (*CreatePrescriptionMedicineReq) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{5}
}

func (x *CreatePrescriptionMedicineReq) GetMedicineId() uint64 {
	if x != nil {
		return x.MedicineId
	}
	return 0
}

func (x *CreatePrescriptionMedicineReq) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CreatePrescriptionMedicineReq) GetDosage() string {
	if x != nil {
		return x.Dosage
	}
	return ""
}

func (x *CreatePrescriptionMedicineReq) GetFrequency() string {
	if x != nil {
		return x.Frequency
	}
	return ""
}

func (x *CreatePrescriptionMedicineReq) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *CreatePrescriptionMedicineReq) GetUsageMethod() string {
	if x != nil {
		return x.UsageMethod
	}
	return ""
}

func (x *CreatePrescriptionMedicineReq) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

type CreatePrescriptionResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code          int64                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Prescription  *PrescriptionInfo      `protobuf:"bytes,3,opt,name=prescription,proto3" json:"prescription,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePrescriptionResp) Reset() {
	*x = CreatePrescriptionResp{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePrescriptionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePrescriptionResp) ProtoMessage() {}

func (x *CreatePrescriptionResp) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePrescriptionResp.ProtoReflect.Descriptor instead.
func (*CreatePrescriptionResp) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{6}
}

func (x *CreatePrescriptionResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreatePrescriptionResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreatePrescriptionResp) GetPrescription() *PrescriptionInfo {
	if x != nil {
		return x.Prescription
	}
	return nil
}

// Update prescription request
type UpdatePrescriptionReq struct {
	state            protoimpl.MessageState           `protogen:"open.v1"`
	PrescriptionId   uint64                           `protobuf:"varint,1,opt,name=prescription_id,json=prescriptionId,proto3" json:"prescription_id,omitempty"`
	DoctorId         uint64                           `protobuf:"varint,2,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	PrescriptionType PrescriptionType                 `protobuf:"varint,3,opt,name=prescription_type,json=prescriptionType,proto3,enum=api.prescription.v1.PrescriptionType" json:"prescription_type,omitempty"`
	UsageInstruction string                           `protobuf:"bytes,4,opt,name=usage_instruction,json=usageInstruction,proto3" json:"usage_instruction,omitempty"`
	Medicines        []*UpdatePrescriptionMedicineReq `protobuf:"bytes,5,rep,name=medicines,proto3" json:"medicines,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *UpdatePrescriptionReq) Reset() {
	*x = UpdatePrescriptionReq{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrescriptionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrescriptionReq) ProtoMessage() {}

func (x *UpdatePrescriptionReq) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrescriptionReq.ProtoReflect.Descriptor instead.
func (*UpdatePrescriptionReq) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{7}
}

func (x *UpdatePrescriptionReq) GetPrescriptionId() uint64 {
	if x != nil {
		return x.PrescriptionId
	}
	return 0
}

func (x *UpdatePrescriptionReq) GetDoctorId() uint64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *UpdatePrescriptionReq) GetPrescriptionType() PrescriptionType {
	if x != nil {
		return x.PrescriptionType
	}
	return PrescriptionType_PRESCRIPTION_TYPE_UNSPECIFIED
}

func (x *UpdatePrescriptionReq) GetUsageInstruction() string {
	if x != nil {
		return x.UsageInstruction
	}
	return ""
}

func (x *UpdatePrescriptionReq) GetMedicines() []*UpdatePrescriptionMedicineReq {
	if x != nil {
		return x.Medicines
	}
	return nil
}

type UpdatePrescriptionMedicineReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	MedicineId    uint64                 `protobuf:"varint,2,opt,name=medicine_id,json=medicineId,proto3" json:"medicine_id,omitempty"`
	Quantity      float64                `protobuf:"fixed64,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Dosage        string                 `protobuf:"bytes,4,opt,name=dosage,proto3" json:"dosage,omitempty"`
	Frequency     string                 `protobuf:"bytes,5,opt,name=frequency,proto3" json:"frequency,omitempty"`
	Duration      string                 `protobuf:"bytes,6,opt,name=duration,proto3" json:"duration,omitempty"`
	UsageMethod   string                 `protobuf:"bytes,7,opt,name=usage_method,json=usageMethod,proto3" json:"usage_method,omitempty"`
	Notes         string                 `protobuf:"bytes,8,opt,name=notes,proto3" json:"notes,omitempty"`
	IsDeleted     bool                   `protobuf:"varint,9,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePrescriptionMedicineReq) Reset() {
	*x = UpdatePrescriptionMedicineReq{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrescriptionMedicineReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrescriptionMedicineReq) ProtoMessage() {}

func (x *UpdatePrescriptionMedicineReq) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrescriptionMedicineReq.ProtoReflect.Descriptor instead.
func (*UpdatePrescriptionMedicineReq) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{8}
}

func (x *UpdatePrescriptionMedicineReq) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdatePrescriptionMedicineReq) GetMedicineId() uint64 {
	if x != nil {
		return x.MedicineId
	}
	return 0
}

func (x *UpdatePrescriptionMedicineReq) GetQuantity() float64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *UpdatePrescriptionMedicineReq) GetDosage() string {
	if x != nil {
		return x.Dosage
	}
	return ""
}

func (x *UpdatePrescriptionMedicineReq) GetFrequency() string {
	if x != nil {
		return x.Frequency
	}
	return ""
}

func (x *UpdatePrescriptionMedicineReq) GetDuration() string {
	if x != nil {
		return x.Duration
	}
	return ""
}

func (x *UpdatePrescriptionMedicineReq) GetUsageMethod() string {
	if x != nil {
		return x.UsageMethod
	}
	return ""
}

func (x *UpdatePrescriptionMedicineReq) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *UpdatePrescriptionMedicineReq) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

type UpdatePrescriptionResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code          int64                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Prescription  *PrescriptionInfo      `protobuf:"bytes,3,opt,name=prescription,proto3" json:"prescription,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdatePrescriptionResp) Reset() {
	*x = UpdatePrescriptionResp{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdatePrescriptionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdatePrescriptionResp) ProtoMessage() {}

func (x *UpdatePrescriptionResp) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdatePrescriptionResp.ProtoReflect.Descriptor instead.
func (*UpdatePrescriptionResp) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{9}
}

func (x *UpdatePrescriptionResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdatePrescriptionResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *UpdatePrescriptionResp) GetPrescription() *PrescriptionInfo {
	if x != nil {
		return x.Prescription
	}
	return nil
}

// Confirm prescription request
type ConfirmPrescriptionReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PrescriptionId uint64                 `protobuf:"varint,1,opt,name=prescription_id,json=prescriptionId,proto3" json:"prescription_id,omitempty"`
	DoctorId       uint64                 `protobuf:"varint,2,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	AuditNotes     string                 `protobuf:"bytes,3,opt,name=audit_notes,json=auditNotes,proto3" json:"audit_notes,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ConfirmPrescriptionReq) Reset() {
	*x = ConfirmPrescriptionReq{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmPrescriptionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPrescriptionReq) ProtoMessage() {}

func (x *ConfirmPrescriptionReq) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPrescriptionReq.ProtoReflect.Descriptor instead.
func (*ConfirmPrescriptionReq) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{10}
}

func (x *ConfirmPrescriptionReq) GetPrescriptionId() uint64 {
	if x != nil {
		return x.PrescriptionId
	}
	return 0
}

func (x *ConfirmPrescriptionReq) GetDoctorId() uint64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *ConfirmPrescriptionReq) GetAuditNotes() string {
	if x != nil {
		return x.AuditNotes
	}
	return ""
}

type ConfirmPrescriptionResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code          int64                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfirmPrescriptionResp) Reset() {
	*x = ConfirmPrescriptionResp{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfirmPrescriptionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPrescriptionResp) ProtoMessage() {}

func (x *ConfirmPrescriptionResp) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPrescriptionResp.ProtoReflect.Descriptor instead.
func (*ConfirmPrescriptionResp) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{11}
}

func (x *ConfirmPrescriptionResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ConfirmPrescriptionResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

// Cancel prescription request
type CancelPrescriptionReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PrescriptionId uint64                 `protobuf:"varint,1,opt,name=prescription_id,json=prescriptionId,proto3" json:"prescription_id,omitempty"`
	DoctorId       uint64                 `protobuf:"varint,2,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	CancelReason   string                 `protobuf:"bytes,3,opt,name=cancel_reason,json=cancelReason,proto3" json:"cancel_reason,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CancelPrescriptionReq) Reset() {
	*x = CancelPrescriptionReq{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelPrescriptionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPrescriptionReq) ProtoMessage() {}

func (x *CancelPrescriptionReq) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPrescriptionReq.ProtoReflect.Descriptor instead.
func (*CancelPrescriptionReq) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{12}
}

func (x *CancelPrescriptionReq) GetPrescriptionId() uint64 {
	if x != nil {
		return x.PrescriptionId
	}
	return 0
}

func (x *CancelPrescriptionReq) GetDoctorId() uint64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *CancelPrescriptionReq) GetCancelReason() string {
	if x != nil {
		return x.CancelReason
	}
	return ""
}

type CancelPrescriptionResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code          int64                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelPrescriptionResp) Reset() {
	*x = CancelPrescriptionResp{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelPrescriptionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelPrescriptionResp) ProtoMessage() {}

func (x *CancelPrescriptionResp) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelPrescriptionResp.ProtoReflect.Descriptor instead.
func (*CancelPrescriptionResp) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{13}
}

func (x *CancelPrescriptionResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CancelPrescriptionResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

// Get prescription details request
type GetPrescriptionReq struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PrescriptionId uint64                 `protobuf:"varint,1,opt,name=prescription_id,json=prescriptionId,proto3" json:"prescription_id,omitempty"`
	DoctorId       uint64                 `protobuf:"varint,2,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetPrescriptionReq) Reset() {
	*x = GetPrescriptionReq{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrescriptionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrescriptionReq) ProtoMessage() {}

func (x *GetPrescriptionReq) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrescriptionReq.ProtoReflect.Descriptor instead.
func (*GetPrescriptionReq) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{14}
}

func (x *GetPrescriptionReq) GetPrescriptionId() uint64 {
	if x != nil {
		return x.PrescriptionId
	}
	return 0
}

func (x *GetPrescriptionReq) GetDoctorId() uint64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

type GetPrescriptionResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code          int64                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Prescription  *PrescriptionInfo      `protobuf:"bytes,3,opt,name=prescription,proto3" json:"prescription,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPrescriptionResp) Reset() {
	*x = GetPrescriptionResp{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPrescriptionResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPrescriptionResp) ProtoMessage() {}

func (x *GetPrescriptionResp) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPrescriptionResp.ProtoReflect.Descriptor instead.
func (*GetPrescriptionResp) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{15}
}

func (x *GetPrescriptionResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPrescriptionResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPrescriptionResp) GetPrescription() *PrescriptionInfo {
	if x != nil {
		return x.Prescription
	}
	return nil
}

// List prescriptions request
type ListPrescriptionsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DoctorId      uint64                 `protobuf:"varint,1,opt,name=doctor_id,json=doctorId,proto3" json:"doctor_id,omitempty"`
	PatientId     uint64                 `protobuf:"varint,2,opt,name=patient_id,json=patientId,proto3" json:"patient_id,omitempty"`
	Status        PrescriptionStatus     `protobuf:"varint,3,opt,name=status,proto3,enum=api.prescription.v1.PrescriptionStatus" json:"status,omitempty"`
	StartDate     string                 `protobuf:"bytes,4,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       string                 `protobuf:"bytes,5,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	Page          int32                  `protobuf:"varint,6,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,7,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrescriptionsReq) Reset() {
	*x = ListPrescriptionsReq{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrescriptionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrescriptionsReq) ProtoMessage() {}

func (x *ListPrescriptionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrescriptionsReq.ProtoReflect.Descriptor instead.
func (*ListPrescriptionsReq) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{16}
}

func (x *ListPrescriptionsReq) GetDoctorId() uint64 {
	if x != nil {
		return x.DoctorId
	}
	return 0
}

func (x *ListPrescriptionsReq) GetPatientId() uint64 {
	if x != nil {
		return x.PatientId
	}
	return 0
}

func (x *ListPrescriptionsReq) GetStatus() PrescriptionStatus {
	if x != nil {
		return x.Status
	}
	return PrescriptionStatus_PRESCRIPTION_STATUS_UNSPECIFIED
}

func (x *ListPrescriptionsReq) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *ListPrescriptionsReq) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *ListPrescriptionsReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPrescriptionsReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type ListPrescriptionsResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code          int64                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Prescriptions []*PrescriptionInfo    `protobuf:"bytes,3,rep,name=prescriptions,proto3" json:"prescriptions,omitempty"`
	Total         int64                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
	Page          int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPrescriptionsResp) Reset() {
	*x = ListPrescriptionsResp{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPrescriptionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPrescriptionsResp) ProtoMessage() {}

func (x *ListPrescriptionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPrescriptionsResp.ProtoReflect.Descriptor instead.
func (*ListPrescriptionsResp) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{17}
}

func (x *ListPrescriptionsResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListPrescriptionsResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *ListPrescriptionsResp) GetPrescriptions() []*PrescriptionInfo {
	if x != nil {
		return x.Prescriptions
	}
	return nil
}

func (x *ListPrescriptionsResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPrescriptionsResp) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPrescriptionsResp) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// Search medicines request
type SearchMedicinesReq struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Keyword          string                 `protobuf:"bytes,1,opt,name=keyword,proto3" json:"keyword,omitempty"`
	Category         string                 `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	PrescriptionType string                 `protobuf:"bytes,3,opt,name=prescription_type,json=prescriptionType,proto3" json:"prescription_type,omitempty"`
	OnlyAvailable    bool                   `protobuf:"varint,4,opt,name=only_available,json=onlyAvailable,proto3" json:"only_available,omitempty"`
	Limit            int32                  `protobuf:"varint,5,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SearchMedicinesReq) Reset() {
	*x = SearchMedicinesReq{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMedicinesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMedicinesReq) ProtoMessage() {}

func (x *SearchMedicinesReq) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMedicinesReq.ProtoReflect.Descriptor instead.
func (*SearchMedicinesReq) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{18}
}

func (x *SearchMedicinesReq) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

func (x *SearchMedicinesReq) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *SearchMedicinesReq) GetPrescriptionType() string {
	if x != nil {
		return x.PrescriptionType
	}
	return ""
}

func (x *SearchMedicinesReq) GetOnlyAvailable() bool {
	if x != nil {
		return x.OnlyAvailable
	}
	return false
}

func (x *SearchMedicinesReq) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type SearchMedicinesResp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code          int64                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Medicines     []*MedicineInfo        `protobuf:"bytes,3,rep,name=medicines,proto3" json:"medicines,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchMedicinesResp) Reset() {
	*x = SearchMedicinesResp{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchMedicinesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMedicinesResp) ProtoMessage() {}

func (x *SearchMedicinesResp) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMedicinesResp.ProtoReflect.Descriptor instead.
func (*SearchMedicinesResp) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{19}
}

func (x *SearchMedicinesResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SearchMedicinesResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *SearchMedicinesResp) GetMedicines() []*MedicineInfo {
	if x != nil {
		return x.Medicines
	}
	return nil
}

// Check drug interactions request
type CheckDrugInteractionsReq struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MedicineIds   []uint64               `protobuf:"varint,1,rep,packed,name=medicine_ids,json=medicineIds,proto3" json:"medicine_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckDrugInteractionsReq) Reset() {
	*x = CheckDrugInteractionsReq{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckDrugInteractionsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDrugInteractionsReq) ProtoMessage() {}

func (x *CheckDrugInteractionsReq) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDrugInteractionsReq.ProtoReflect.Descriptor instead.
func (*CheckDrugInteractionsReq) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{20}
}

func (x *CheckDrugInteractionsReq) GetMedicineIds() []uint64 {
	if x != nil {
		return x.MedicineIds
	}
	return nil
}

type CheckDrugInteractionsResp struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Message              string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Code                 int64                  `protobuf:"varint,2,opt,name=code,proto3" json:"code,omitempty"`
	Interactions         []*DrugInteractionInfo `protobuf:"bytes,3,rep,name=interactions,proto3" json:"interactions,omitempty"`
	HasSevereInteraction bool                   `protobuf:"varint,4,opt,name=has_severe_interaction,json=hasSevereInteraction,proto3" json:"has_severe_interaction,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *CheckDrugInteractionsResp) Reset() {
	*x = CheckDrugInteractionsResp{}
	mi := &file_prescription_v1_prescription_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckDrugInteractionsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckDrugInteractionsResp) ProtoMessage() {}

func (x *CheckDrugInteractionsResp) ProtoReflect() protoreflect.Message {
	mi := &file_prescription_v1_prescription_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckDrugInteractionsResp.ProtoReflect.Descriptor instead.
func (*CheckDrugInteractionsResp) Descriptor() ([]byte, []int) {
	return file_prescription_v1_prescription_proto_rawDescGZIP(), []int{21}
}

func (x *CheckDrugInteractionsResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CheckDrugInteractionsResp) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CheckDrugInteractionsResp) GetInteractions() []*DrugInteractionInfo {
	if x != nil {
		return x.Interactions
	}
	return nil
}

func (x *CheckDrugInteractionsResp) GetHasSevereInteraction() bool {
	if x != nil {
		return x.HasSevereInteraction
	}
	return false
}

var File_prescription_v1_prescription_proto protoreflect.FileDescriptor

const file_prescription_v1_prescription_proto_rawDesc = "" +
	"\n" +
	"\"prescription/v1/prescription.proto\x12\x13api.prescription.v1\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xaf\x05\n" +
	"\x10PrescriptionInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12'\n" +
	"\x0fprescription_no\x18\x02 \x01(\tR\x0eprescriptionNo\x12\x1b\n" +
	"\tdoctor_id\x18\x03 \x01(\x04R\bdoctorId\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x04 \x01(\x04R\tpatientId\x12*\n" +
	"\x11medical_record_id\x18\x05 \x01(\x04R\x0fmedicalRecordId\x12+\n" +
	"\x11prescription_date\x18\x06 \x01(\tR\x10prescriptionDate\x12!\n" +
	"\ftotal_amount\x18\a \x01(\x01R\vtotalAmount\x12R\n" +
	"\x11prescription_type\x18\b \x01(\x0e2%.api.prescription.v1.PrescriptionTypeR\x10prescriptionType\x12+\n" +
	"\x11usage_instruction\x18\t \x01(\tR\x10usageInstruction\x12?\n" +
	"\x06status\x18\n" +
	" \x01(\x0e2'.api.prescription.v1.PrescriptionStatusR\x06status\x12\x1d\n" +
	"\n" +
	"auditor_id\x18\v \x01(\x04R\tauditorId\x12\x1d\n" +
	"\n" +
	"audit_time\x18\f \x01(\tR\tauditTime\x12\x1f\n" +
	"\vaudit_notes\x18\r \x01(\tR\n" +
	"auditNotes\x12K\n" +
	"\tmedicines\x18\x0e \x03(\v2-.api.prescription.v1.PrescriptionMedicineInfoR\tmedicines\x12\x1d\n" +
	"\n" +
	"created_at\x18\x0f \x01(\tR\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x10 \x01(\tR\tupdatedAt\"\x83\x04\n" +
	"\x18PrescriptionMedicineInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12'\n" +
	"\x0fprescription_id\x18\x02 \x01(\x04R\x0eprescriptionId\x12\x1f\n" +
	"\vmedicine_id\x18\x03 \x01(\x04R\n" +
	"medicineId\x12#\n" +
	"\rmedicine_name\x18\x04 \x01(\tR\fmedicineName\x12#\n" +
	"\rmedicine_code\x18\x05 \x01(\tR\fmedicineCode\x12$\n" +
	"\rspecification\x18\x06 \x01(\tR\rspecification\x12\"\n" +
	"\fmanufacturer\x18\a \x01(\tR\fmanufacturer\x12\x1a\n" +
	"\bquantity\x18\b \x01(\x01R\bquantity\x12\x12\n" +
	"\x04unit\x18\t \x01(\tR\x04unit\x12\x1d\n" +
	"\n" +
	"unit_price\x18\n" +
	" \x01(\x01R\tunitPrice\x12\x1f\n" +
	"\vtotal_price\x18\v \x01(\x01R\n" +
	"totalPrice\x12\x16\n" +
	"\x06dosage\x18\f \x01(\tR\x06dosage\x12\x1c\n" +
	"\tfrequency\x18\r \x01(\tR\tfrequency\x12\x1a\n" +
	"\bduration\x18\x0e \x01(\tR\bduration\x12!\n" +
	"\fusage_method\x18\x0f \x01(\tR\vusageMethod\x12\x14\n" +
	"\x05notes\x18\x10 \x01(\tR\x05notes\"\xb7\x06\n" +
	"\fMedicineInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12#\n" +
	"\rmedicine_code\x18\x02 \x01(\tR\fmedicineCode\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12!\n" +
	"\fgeneric_name\x18\x04 \x01(\tR\vgenericName\x12\x1d\n" +
	"\n" +
	"brand_name\x18\x05 \x01(\tR\tbrandName\x12$\n" +
	"\rspecification\x18\x06 \x01(\tR\rspecification\x12\x1f\n" +
	"\vdosage_form\x18\a \x01(\tR\n" +
	"dosageForm\x12\"\n" +
	"\fmanufacturer\x18\b \x01(\tR\fmanufacturer\x12'\n" +
	"\x0fapproval_number\x18\t \x01(\tR\x0eapprovalNumber\x12\x1a\n" +
	"\bcategory\x18\n" +
	" \x01(\tR\bcategory\x12+\n" +
	"\x11prescription_type\x18\v \x01(\tR\x10prescriptionType\x12\x12\n" +
	"\x04unit\x18\f \x01(\tR\x04unit\x12\x14\n" +
	"\x05price\x18\r \x01(\x01R\x05price\x12 \n" +
	"\vindications\x18\x0e \x01(\tR\vindications\x12,\n" +
	"\x11contraindications\x18\x0f \x01(\tR\x11contraindications\x12!\n" +
	"\fside_effects\x18\x10 \x01(\tR\vsideEffects\x12!\n" +
	"\fdosage_usage\x18\x11 \x01(\tR\vdosageUsage\x12-\n" +
	"\x12storage_conditions\x18\x12 \x01(\tR\x11storageConditions\x12\x1d\n" +
	"\n" +
	"shelf_life\x18\x13 \x01(\x05R\tshelfLife\x12\x1b\n" +
	"\timage_url\x18\x14 \x01(\tR\bimageUrl\x12\x16\n" +
	"\x06status\x18\x15 \x01(\tR\x06status\x12%\n" +
	"\x0estock_quantity\x18\x16 \x01(\x01R\rstockQuantity\x12-\n" +
	"\x12available_quantity\x18\x17 \x01(\x01R\x11availableQuantity\x12&\n" +
	"\x0fmin_stock_level\x18\x18 \x01(\x01R\rminStockLevel\"\x93\x02\n" +
	"\x13DrugInteractionInfo\x12\"\n" +
	"\rmedicine_id_1\x18\x01 \x01(\x04R\vmedicineId1\x12&\n" +
	"\x0fmedicine_name_1\x18\x02 \x01(\tR\rmedicineName1\x12\"\n" +
	"\rmedicine_id_2\x18\x03 \x01(\x04R\vmedicineId2\x12&\n" +
	"\x0fmedicine_name_2\x18\x04 \x01(\tR\rmedicineName2\x12\x1a\n" +
	"\bseverity\x18\x05 \x01(\tR\bseverity\x12 \n" +
	"\vdescription\x18\x06 \x01(\tR\vdescription\x12&\n" +
	"\x0erecommendation\x18\a \x01(\tR\x0erecommendation\"\xd2\x02\n" +
	"\x15CreatePrescriptionReq\x12\x1b\n" +
	"\tdoctor_id\x18\x01 \x01(\x04R\bdoctorId\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x02 \x01(\x04R\tpatientId\x12*\n" +
	"\x11medical_record_id\x18\x03 \x01(\x04R\x0fmedicalRecordId\x12R\n" +
	"\x11prescription_type\x18\x04 \x01(\x0e2%.api.prescription.v1.PrescriptionTypeR\x10prescriptionType\x12+\n" +
	"\x11usage_instruction\x18\x05 \x01(\tR\x10usageInstruction\x12P\n" +
	"\tmedicines\x18\x06 \x03(\v22.api.prescription.v1.CreatePrescriptionMedicineReqR\tmedicines\"\xe7\x01\n" +
	"\x1dCreatePrescriptionMedicineReq\x12\x1f\n" +
	"\vmedicine_id\x18\x01 \x01(\x04R\n" +
	"medicineId\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\x01R\bquantity\x12\x16\n" +
	"\x06dosage\x18\x03 \x01(\tR\x06dosage\x12\x1c\n" +
	"\tfrequency\x18\x04 \x01(\tR\tfrequency\x12\x1a\n" +
	"\bduration\x18\x05 \x01(\tR\bduration\x12!\n" +
	"\fusage_method\x18\x06 \x01(\tR\vusageMethod\x12\x14\n" +
	"\x05notes\x18\a \x01(\tR\x05notes\"\x91\x01\n" +
	"\x16CreatePrescriptionResp\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x03R\x04code\x12I\n" +
	"\fprescription\x18\x03 \x01(\v2%.api.prescription.v1.PrescriptionInfoR\fprescription\"\xb0\x02\n" +
	"\x15UpdatePrescriptionReq\x12'\n" +
	"\x0fprescription_id\x18\x01 \x01(\x04R\x0eprescriptionId\x12\x1b\n" +
	"\tdoctor_id\x18\x02 \x01(\x04R\bdoctorId\x12R\n" +
	"\x11prescription_type\x18\x03 \x01(\x0e2%.api.prescription.v1.PrescriptionTypeR\x10prescriptionType\x12+\n" +
	"\x11usage_instruction\x18\x04 \x01(\tR\x10usageInstruction\x12P\n" +
	"\tmedicines\x18\x05 \x03(\v22.api.prescription.v1.UpdatePrescriptionMedicineReqR\tmedicines\"\x96\x02\n" +
	"\x1dUpdatePrescriptionMedicineReq\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x04R\x02id\x12\x1f\n" +
	"\vmedicine_id\x18\x02 \x01(\x04R\n" +
	"medicineId\x12\x1a\n" +
	"\bquantity\x18\x03 \x01(\x01R\bquantity\x12\x16\n" +
	"\x06dosage\x18\x04 \x01(\tR\x06dosage\x12\x1c\n" +
	"\tfrequency\x18\x05 \x01(\tR\tfrequency\x12\x1a\n" +
	"\bduration\x18\x06 \x01(\tR\bduration\x12!\n" +
	"\fusage_method\x18\a \x01(\tR\vusageMethod\x12\x14\n" +
	"\x05notes\x18\b \x01(\tR\x05notes\x12\x1d\n" +
	"\n" +
	"is_deleted\x18\t \x01(\bR\tisDeleted\"\x91\x01\n" +
	"\x16UpdatePrescriptionResp\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x03R\x04code\x12I\n" +
	"\fprescription\x18\x03 \x01(\v2%.api.prescription.v1.PrescriptionInfoR\fprescription\"\x7f\n" +
	"\x16ConfirmPrescriptionReq\x12'\n" +
	"\x0fprescription_id\x18\x01 \x01(\x04R\x0eprescriptionId\x12\x1b\n" +
	"\tdoctor_id\x18\x02 \x01(\x04R\bdoctorId\x12\x1f\n" +
	"\vaudit_notes\x18\x03 \x01(\tR\n" +
	"auditNotes\"G\n" +
	"\x17ConfirmPrescriptionResp\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x03R\x04code\"\x82\x01\n" +
	"\x15CancelPrescriptionReq\x12'\n" +
	"\x0fprescription_id\x18\x01 \x01(\x04R\x0eprescriptionId\x12\x1b\n" +
	"\tdoctor_id\x18\x02 \x01(\x04R\bdoctorId\x12#\n" +
	"\rcancel_reason\x18\x03 \x01(\tR\fcancelReason\"F\n" +
	"\x16CancelPrescriptionResp\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x03R\x04code\"Z\n" +
	"\x12GetPrescriptionReq\x12'\n" +
	"\x0fprescription_id\x18\x01 \x01(\x04R\x0eprescriptionId\x12\x1b\n" +
	"\tdoctor_id\x18\x02 \x01(\x04R\bdoctorId\"\x8e\x01\n" +
	"\x13GetPrescriptionResp\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x03R\x04code\x12I\n" +
	"\fprescription\x18\x03 \x01(\v2%.api.prescription.v1.PrescriptionInfoR\fprescription\"\xfe\x01\n" +
	"\x14ListPrescriptionsReq\x12\x1b\n" +
	"\tdoctor_id\x18\x01 \x01(\x04R\bdoctorId\x12\x1d\n" +
	"\n" +
	"patient_id\x18\x02 \x01(\x04R\tpatientId\x12?\n" +
	"\x06status\x18\x03 \x01(\x0e2'.api.prescription.v1.PrescriptionStatusR\x06status\x12\x1d\n" +
	"\n" +
	"start_date\x18\x04 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x05 \x01(\tR\aendDate\x12\x12\n" +
	"\x04page\x18\x06 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\a \x01(\x05R\bpageSize\"\xd9\x01\n" +
	"\x15ListPrescriptionsResp\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x03R\x04code\x12K\n" +
	"\rprescriptions\x18\x03 \x03(\v2%.api.prescription.v1.PrescriptionInfoR\rprescriptions\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x03R\x05total\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\"\xb4\x01\n" +
	"\x12SearchMedicinesReq\x12\x18\n" +
	"\akeyword\x18\x01 \x01(\tR\akeyword\x12\x1a\n" +
	"\bcategory\x18\x02 \x01(\tR\bcategory\x12+\n" +
	"\x11prescription_type\x18\x03 \x01(\tR\x10prescriptionType\x12%\n" +
	"\x0eonly_available\x18\x04 \x01(\bR\ronlyAvailable\x12\x14\n" +
	"\x05limit\x18\x05 \x01(\x05R\x05limit\"\x84\x01\n" +
	"\x13SearchMedicinesResp\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x03R\x04code\x12?\n" +
	"\tmedicines\x18\x03 \x03(\v2!.api.prescription.v1.MedicineInfoR\tmedicines\"=\n" +
	"\x18CheckDrugInteractionsReq\x12!\n" +
	"\fmedicine_ids\x18\x01 \x03(\x04R\vmedicineIds\"\xcd\x01\n" +
	"\x19CheckDrugInteractionsResp\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x12\n" +
	"\x04code\x18\x02 \x01(\x03R\x04code\x12L\n" +
	"\finteractions\x18\x03 \x03(\v2(.api.prescription.v1.DrugInteractionInfoR\finteractions\x124\n" +
	"\x16has_severe_interaction\x18\x04 \x01(\bR\x14hasSevereInteraction*\xe2\x01\n" +
	"\x12PrescriptionStatus\x12#\n" +
	"\x1fPRESCRIPTION_STATUS_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19PRESCRIPTION_STATUS_DRAFT\x10\x01\x12\x1f\n" +
	"\x1bPRESCRIPTION_STATUS_PENDING\x10\x02\x12!\n" +
	"\x1dPRESCRIPTION_STATUS_CONFIRMED\x10\x03\x12!\n" +
	"\x1dPRESCRIPTION_STATUS_DISPENSED\x10\x04\x12!\n" +
	"\x1dPRESCRIPTION_STATUS_CANCELLED\x10\x05*\x90\x01\n" +
	"\x10PrescriptionType\x12!\n" +
	"\x1dPRESCRIPTION_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19PRESCRIPTION_TYPE_WESTERN\x10\x01\x12\x1d\n" +
	"\x19PRESCRIPTION_TYPE_CHINESE\x10\x02\x12\x1b\n" +
	"\x17PRESCRIPTION_TYPE_MIXED\x10\x032\xf7\t\n" +
	"\fPrescription\x12\x95\x01\n" +
	"\x12CreatePrescription\x12*.api.prescription.v1.CreatePrescriptionReq\x1a+.api.prescription.v1.CreatePrescriptionResp\"&\x82\xd3\xe4\x93\x02 :\x01*\"\x1b/api/v1/prescription/create\x12\xa0\x01\n" +
	"\x12UpdatePrescription\x12*.api.prescription.v1.UpdatePrescriptionReq\x1a+.api.prescription.v1.UpdatePrescriptionResp\"1\x82\xd3\xe4\x93\x02+:\x01*\x1a&/api/v1/prescription/{prescription_id}\x12\xab\x01\n" +
	"\x13ConfirmPrescription\x12+.api.prescription.v1.ConfirmPrescriptionReq\x1a,.api.prescription.v1.ConfirmPrescriptionResp\"9\x82\xd3\xe4\x93\x023:\x01*\"./api/v1/prescription/{prescription_id}/confirm\x12\xa7\x01\n" +
	"\x12CancelPrescription\x12*.api.prescription.v1.CancelPrescriptionReq\x1a+.api.prescription.v1.CancelPrescriptionResp\"8\x82\xd3\xe4\x93\x022:\x01*\"-/api/v1/prescription/{prescription_id}/cancel\x12\x94\x01\n" +
	"\x0fGetPrescription\x12'.api.prescription.v1.GetPrescriptionReq\x1a(.api.prescription.v1.GetPrescriptionResp\".\x82\xd3\xe4\x93\x02(\x12&/api/v1/prescription/{prescription_id}\x12\x89\x01\n" +
	"\x11ListPrescriptions\x12).api.prescription.v1.ListPrescriptionsReq\x1a*.api.prescription.v1.ListPrescriptionsResp\"\x1d\x82\xd3\xe4\x93\x02\x17\x12\x15/api/v1/prescriptions\x12\x86\x01\n" +
	"\x0fSearchMedicines\x12'.api.prescription.v1.SearchMedicinesReq\x1a(.api.prescription.v1.SearchMedicinesResp\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/api/v1/medicines/search\x12\xa7\x01\n" +
	"\x15CheckDrugInteractions\x12-.api.prescription.v1.CheckDrugInteractionsReq\x1a..api.prescription.v1.CheckDrugInteractionsResp\"/\x82\xd3\xe4\x93\x02):\x01*\"$/api/v1/medicines/check-interactionsB7\n" +
	"\x13api.prescription.v1P\x01Z\x1edoctors/api/prescription/v1;v1b\x06proto3"

var (
	file_prescription_v1_prescription_proto_rawDescOnce sync.Once
	file_prescription_v1_prescription_proto_rawDescData []byte
)

func file_prescription_v1_prescription_proto_rawDescGZIP() []byte {
	file_prescription_v1_prescription_proto_rawDescOnce.Do(func() {
		file_prescription_v1_prescription_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_prescription_v1_prescription_proto_rawDesc), len(file_prescription_v1_prescription_proto_rawDesc)))
	})
	return file_prescription_v1_prescription_proto_rawDescData
}

var file_prescription_v1_prescription_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_prescription_v1_prescription_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_prescription_v1_prescription_proto_goTypes = []any{
	(PrescriptionStatus)(0),               // 0: api.prescription.v1.PrescriptionStatus
	(PrescriptionType)(0),                 // 1: api.prescription.v1.PrescriptionType
	(*PrescriptionInfo)(nil),              // 2: api.prescription.v1.PrescriptionInfo
	(*PrescriptionMedicineInfo)(nil),      // 3: api.prescription.v1.PrescriptionMedicineInfo
	(*MedicineInfo)(nil),                  // 4: api.prescription.v1.MedicineInfo
	(*DrugInteractionInfo)(nil),           // 5: api.prescription.v1.DrugInteractionInfo
	(*CreatePrescriptionReq)(nil),         // 6: api.prescription.v1.CreatePrescriptionReq
	(*CreatePrescriptionMedicineReq)(nil), // 7: api.prescription.v1.CreatePrescriptionMedicineReq
	(*CreatePrescriptionResp)(nil),        // 8: api.prescription.v1.CreatePrescriptionResp
	(*UpdatePrescriptionReq)(nil),         // 9: api.prescription.v1.UpdatePrescriptionReq
	(*UpdatePrescriptionMedicineReq)(nil), // 10: api.prescription.v1.UpdatePrescriptionMedicineReq
	(*UpdatePrescriptionResp)(nil),        // 11: api.prescription.v1.UpdatePrescriptionResp
	(*ConfirmPrescriptionReq)(nil),        // 12: api.prescription.v1.ConfirmPrescriptionReq
	(*ConfirmPrescriptionResp)(nil),       // 13: api.prescription.v1.ConfirmPrescriptionResp
	(*CancelPrescriptionReq)(nil),         // 14: api.prescription.v1.CancelPrescriptionReq
	(*CancelPrescriptionResp)(nil),        // 15: api.prescription.v1.CancelPrescriptionResp
	(*GetPrescriptionReq)(nil),            // 16: api.prescription.v1.GetPrescriptionReq
	(*GetPrescriptionResp)(nil),           // 17: api.prescription.v1.GetPrescriptionResp
	(*ListPrescriptionsReq)(nil),          // 18: api.prescription.v1.ListPrescriptionsReq
	(*ListPrescriptionsResp)(nil),         // 19: api.prescription.v1.ListPrescriptionsResp
	(*SearchMedicinesReq)(nil),            // 20: api.prescription.v1.SearchMedicinesReq
	(*SearchMedicinesResp)(nil),           // 21: api.prescription.v1.SearchMedicinesResp
	(*CheckDrugInteractionsReq)(nil),      // 22: api.prescription.v1.CheckDrugInteractionsReq
	(*CheckDrugInteractionsResp)(nil),     // 23: api.prescription.v1.CheckDrugInteractionsResp
}
var file_prescription_v1_prescription_proto_depIdxs = []int32{
	1,  // 0: api.prescription.v1.PrescriptionInfo.prescription_type:type_name -> api.prescription.v1.PrescriptionType
	0,  // 1: api.prescription.v1.PrescriptionInfo.status:type_name -> api.prescription.v1.PrescriptionStatus
	3,  // 2: api.prescription.v1.PrescriptionInfo.medicines:type_name -> api.prescription.v1.PrescriptionMedicineInfo
	1,  // 3: api.prescription.v1.CreatePrescriptionReq.prescription_type:type_name -> api.prescription.v1.PrescriptionType
	7,  // 4: api.prescription.v1.CreatePrescriptionReq.medicines:type_name -> api.prescription.v1.CreatePrescriptionMedicineReq
	2,  // 5: api.prescription.v1.CreatePrescriptionResp.prescription:type_name -> api.prescription.v1.PrescriptionInfo
	1,  // 6: api.prescription.v1.UpdatePrescriptionReq.prescription_type:type_name -> api.prescription.v1.PrescriptionType
	10, // 7: api.prescription.v1.UpdatePrescriptionReq.medicines:type_name -> api.prescription.v1.UpdatePrescriptionMedicineReq
	2,  // 8: api.prescription.v1.UpdatePrescriptionResp.prescription:type_name -> api.prescription.v1.PrescriptionInfo
	2,  // 9: api.prescription.v1.GetPrescriptionResp.prescription:type_name -> api.prescription.v1.PrescriptionInfo
	0,  // 10: api.prescription.v1.ListPrescriptionsReq.status:type_name -> api.prescription.v1.PrescriptionStatus
	2,  // 11: api.prescription.v1.ListPrescriptionsResp.prescriptions:type_name -> api.prescription.v1.PrescriptionInfo
	4,  // 12: api.prescription.v1.SearchMedicinesResp.medicines:type_name -> api.prescription.v1.MedicineInfo
	5,  // 13: api.prescription.v1.CheckDrugInteractionsResp.interactions:type_name -> api.prescription.v1.DrugInteractionInfo
	6,  // 14: api.prescription.v1.Prescription.CreatePrescription:input_type -> api.prescription.v1.CreatePrescriptionReq
	9,  // 15: api.prescription.v1.Prescription.UpdatePrescription:input_type -> api.prescription.v1.UpdatePrescriptionReq
	12, // 16: api.prescription.v1.Prescription.ConfirmPrescription:input_type -> api.prescription.v1.ConfirmPrescriptionReq
	14, // 17: api.prescription.v1.Prescription.CancelPrescription:input_type -> api.prescription.v1.CancelPrescriptionReq
	16, // 18: api.prescription.v1.Prescription.GetPrescription:input_type -> api.prescription.v1.GetPrescriptionReq
	18, // 19: api.prescription.v1.Prescription.ListPrescriptions:input_type -> api.prescription.v1.ListPrescriptionsReq
	20, // 20: api.prescription.v1.Prescription.SearchMedicines:input_type -> api.prescription.v1.SearchMedicinesReq
	22, // 21: api.prescription.v1.Prescription.CheckDrugInteractions:input_type -> api.prescription.v1.CheckDrugInteractionsReq
	8,  // 22: api.prescription.v1.Prescription.CreatePrescription:output_type -> api.prescription.v1.CreatePrescriptionResp
	11, // 23: api.prescription.v1.Prescription.UpdatePrescription:output_type -> api.prescription.v1.UpdatePrescriptionResp
	13, // 24: api.prescription.v1.Prescription.ConfirmPrescription:output_type -> api.prescription.v1.ConfirmPrescriptionResp
	15, // 25: api.prescription.v1.Prescription.CancelPrescription:output_type -> api.prescription.v1.CancelPrescriptionResp
	17, // 26: api.prescription.v1.Prescription.GetPrescription:output_type -> api.prescription.v1.GetPrescriptionResp
	19, // 27: api.prescription.v1.Prescription.ListPrescriptions:output_type -> api.prescription.v1.ListPrescriptionsResp
	21, // 28: api.prescription.v1.Prescription.SearchMedicines:output_type -> api.prescription.v1.SearchMedicinesResp
	23, // 29: api.prescription.v1.Prescription.CheckDrugInteractions:output_type -> api.prescription.v1.CheckDrugInteractionsResp
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_prescription_v1_prescription_proto_init() }
func file_prescription_v1_prescription_proto_init() {
	if File_prescription_v1_prescription_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_prescription_v1_prescription_proto_rawDesc), len(file_prescription_v1_prescription_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_prescription_v1_prescription_proto_goTypes,
		DependencyIndexes: file_prescription_v1_prescription_proto_depIdxs,
		EnumInfos:         file_prescription_v1_prescription_proto_enumTypes,
		MessageInfos:      file_prescription_v1_prescription_proto_msgTypes,
	}.Build()
	File_prescription_v1_prescription_proto = out.File
	file_prescription_v1_prescription_proto_goTypes = nil
	file_prescription_v1_prescription_proto_depIdxs = nil
}
